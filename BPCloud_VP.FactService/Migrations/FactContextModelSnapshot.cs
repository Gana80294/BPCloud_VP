// <auto-generated />
using System;
using BPCloud_VP.FactService.DBContexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace BPCloud_VP.FactService.Migrations
{
    [DbContext(typeof(FactContext))]
    partial class FactContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("BPCloud_VP.FactService.Models.BPCAIACT", b =>
                {
                    b.Property<string>("Client")
                        .HasMaxLength(3)
                        .HasColumnType("character varying(3)");

                    b.Property<string>("Company")
                        .HasMaxLength(4)
                        .HasColumnType("character varying(4)");

                    b.Property<string>("Type")
                        .HasMaxLength(1)
                        .HasColumnType("character varying(1)");

                    b.Property<string>("PatnerID")
                        .HasMaxLength(12)
                        .HasColumnType("character varying(12)");

                    b.Property<int>("SeqNo")
                        .HasColumnType("integer");

                    b.Property<string>("ActType")
                        .HasColumnType("text");

                    b.Property<string>("Action")
                        .HasColumnType("text");

                    b.Property<string>("ActionText")
                        .HasColumnType("text");

                    b.Property<string>("AppID")
                        .HasColumnType("text");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("DocNumber")
                        .HasColumnType("text");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsSeen")
                        .HasColumnType("boolean");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("text");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Status")
                        .HasColumnType("text");

                    b.Property<string>("Time")
                        .HasColumnType("text");

                    b.HasKey("Client", "Company", "Type", "PatnerID", "SeqNo");

                    b.ToTable("BPC_AI_ACT");
                });

            modelBuilder.Entity("BPCloud_VP.FactService.Models.BPCAttachments", b =>
                {
                    b.Property<int>("AttachmentID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("AttachmentID"));

                    b.Property<byte[]>("AttachmentFile")
                        .HasColumnType("bytea");

                    b.Property<string>("AttachmentName")
                        .HasColumnType("text");

                    b.Property<string>("Client")
                        .HasMaxLength(3)
                        .HasColumnType("character varying(3)");

                    b.Property<string>("Company")
                        .HasMaxLength(4)
                        .HasColumnType("character varying(4)");

                    b.Property<long>("ContentLength")
                        .HasColumnType("bigint");

                    b.Property<string>("ContentType")
                        .HasColumnType("text");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("text");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("PatnerID")
                        .HasMaxLength(12)
                        .HasColumnType("character varying(12)");

                    b.Property<string>("ReferenceNo")
                        .HasColumnType("text");

                    b.Property<string>("Type")
                        .HasMaxLength(1)
                        .HasColumnType("character varying(1)");

                    b.HasKey("AttachmentID");

                    b.HasIndex("Client", "Company", "Type", "PatnerID");

                    b.ToTable("BPC_Attachments");
                });

            modelBuilder.Entity("BPCloud_VP.FactService.Models.BPCCertificate", b =>
                {
                    b.Property<string>("Client")
                        .HasMaxLength(3)
                        .HasColumnType("character varying(3)");

                    b.Property<string>("Company")
                        .HasMaxLength(4)
                        .HasColumnType("character varying(4)");

                    b.Property<string>("Type")
                        .HasMaxLength(1)
                        .HasColumnType("character varying(1)");

                    b.Property<string>("PatnerID")
                        .HasMaxLength(12)
                        .HasColumnType("character varying(12)");

                    b.Property<string>("CertificateType")
                        .HasColumnType("text");

                    b.Property<string>("CertificateName")
                        .HasColumnType("text");

                    b.Property<string>("Attachment")
                        .HasColumnType("text");

                    b.Property<byte[]>("AttachmentFile")
                        .HasColumnType("bytea");

                    b.Property<int>("AttachmentID")
                        .HasColumnType("integer");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<string>("Mandatory")
                        .HasColumnType("text");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("text");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("Validity")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Client", "Company", "Type", "PatnerID", "CertificateType", "CertificateName");

                    b.ToTable("BPC_Cert");
                });

            modelBuilder.Entity("BPCloud_VP.FactService.Models.BPCCertificateSupport", b =>
                {
                    b.Property<string>("Client")
                        .HasMaxLength(3)
                        .HasColumnType("character varying(3)");

                    b.Property<string>("Company")
                        .HasMaxLength(4)
                        .HasColumnType("character varying(4)");

                    b.Property<string>("Type")
                        .HasMaxLength(1)
                        .HasColumnType("character varying(1)");

                    b.Property<string>("PatnerID")
                        .HasMaxLength(12)
                        .HasColumnType("character varying(12)");

                    b.Property<string>("CertificateType")
                        .HasColumnType("text");

                    b.Property<string>("CertificateName")
                        .HasColumnType("text");

                    b.Property<string>("Attachment")
                        .HasColumnType("text");

                    b.Property<byte[]>("AttachmentFile")
                        .HasColumnType("bytea");

                    b.Property<int>("AttachmentID")
                        .HasColumnType("integer");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("ID")
                        .HasColumnType("text");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<string>("Mandatory")
                        .HasColumnType("text");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("text");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("Validity")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Client", "Company", "Type", "PatnerID", "CertificateType", "CertificateName");

                    b.ToTable("BPC_Cert_Support");
                });

            modelBuilder.Entity("BPCloud_VP.FactService.Models.BPCDashboardCard", b =>
                {
                    b.Property<int>("AttachmentID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("AttachmentID"));

                    b.Property<byte[]>("AttachmentFile")
                        .HasColumnType("bytea");

                    b.Property<string>("AttachmentName")
                        .HasColumnType("text");

                    b.Property<long>("ContentLength")
                        .HasColumnType("bigint");

                    b.Property<string>("ContentType")
                        .HasColumnType("text");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("text");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("AttachmentID");

                    b.ToTable("BPC_Dashboard_Card");
                });

            modelBuilder.Entity("BPCloud_VP.FactService.Models.BPCFact", b =>
                {
                    b.Property<string>("Client")
                        .HasMaxLength(3)
                        .HasColumnType("character varying(3)");

                    b.Property<string>("Company")
                        .HasMaxLength(4)
                        .HasColumnType("character varying(4)");

                    b.Property<string>("Type")
                        .HasMaxLength(1)
                        .HasColumnType("character varying(1)");

                    b.Property<string>("PatnerID")
                        .HasMaxLength(12)
                        .HasColumnType("character varying(12)");

                    b.Property<string>("AccountGroup")
                        .HasColumnType("text");

                    b.Property<string>("AddressLine1")
                        .HasColumnType("text");

                    b.Property<string>("AddressLine2")
                        .HasColumnType("text");

                    b.Property<string>("City")
                        .HasColumnType("text");

                    b.Property<string>("CompanyCode")
                        .HasColumnType("text");

                    b.Property<string>("Country")
                        .HasColumnType("text");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<double>("CreditAmount")
                        .HasColumnType("double precision");

                    b.Property<double>("CreditBalance")
                        .HasColumnType("double precision");

                    b.Property<DateTime?>("CreditEvalDate")
                        .IsRequired()
                        .HasColumnType("timestamp with time zone");

                    b.Property<double>("CreditLimit")
                        .HasColumnType("double precision");

                    b.Property<string>("Currency")
                        .HasColumnType("text");

                    b.Property<string>("Email1")
                        .HasColumnType("text");

                    b.Property<string>("Email2")
                        .HasColumnType("text");

                    b.Property<string>("GSTNumber")
                        .HasColumnType("text");

                    b.Property<string>("GSTStatus")
                        .HasColumnType("text");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsBlocked")
                        .HasColumnType("boolean");

                    b.Property<double>("LastPayment")
                        .HasColumnType("double precision");

                    b.Property<DateTime?>("LastPaymentDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("LegalName")
                        .HasMaxLength(40)
                        .HasColumnType("character varying(40)");

                    b.Property<bool>("MSME")
                        .HasColumnType("boolean");

                    b.Property<string>("MSME_Att_ID")
                        .HasColumnType("text");

                    b.Property<string>("MSME_TYPE")
                        .HasColumnType("text");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("text");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<double>("OutstandingAmount")
                        .HasColumnType("double precision");

                    b.Property<string>("PANNumber")
                        .HasColumnType("text");

                    b.Property<string>("Phone1")
                        .HasColumnType("text");

                    b.Property<string>("Phone2")
                        .HasColumnType("text");

                    b.Property<string>("PinCode")
                        .HasColumnType("text");

                    b.Property<string>("Plant")
                        .HasColumnType("text");

                    b.Property<string>("PurchaseOrg")
                        .HasColumnType("text");

                    b.Property<bool>("RP")
                        .HasColumnType("boolean");

                    b.Property<string>("RP_Att_ID")
                        .HasColumnType("text");

                    b.Property<string>("RP_Name")
                        .HasColumnType("text");

                    b.Property<string>("RP_Type")
                        .HasColumnType("text");

                    b.Property<bool>("Reduced_TDS")
                        .HasColumnType("boolean");

                    b.Property<string>("Role")
                        .HasColumnType("text");

                    b.Property<string>("State")
                        .HasColumnType("text");

                    b.Property<string>("TDS_Att_ID")
                        .HasColumnType("text");

                    b.Property<string>("TDS_Cert_No")
                        .HasColumnType("text");

                    b.Property<string>("TDS_RATE")
                        .HasColumnType("text");

                    b.Property<string>("TaxID1")
                        .HasColumnType("text");

                    b.Property<string>("TaxID2")
                        .HasColumnType("text");

                    b.Property<string>("TypeofIndustry")
                        .HasColumnType("text");

                    b.Property<string>("VendorCode")
                        .HasColumnType("text");

                    b.HasKey("Client", "Company", "Type", "PatnerID");

                    b.ToTable("BPC_Fact");
                });

            modelBuilder.Entity("BPCloud_VP.FactService.Models.BPCFactBank", b =>
                {
                    b.Property<string>("Client")
                        .HasMaxLength(3)
                        .HasColumnType("character varying(3)");

                    b.Property<string>("Company")
                        .HasMaxLength(4)
                        .HasColumnType("character varying(4)");

                    b.Property<string>("Type")
                        .HasMaxLength(1)
                        .HasColumnType("character varying(1)");

                    b.Property<string>("PatnerID")
                        .HasMaxLength(12)
                        .HasColumnType("character varying(12)");

                    b.Property<string>("AccountNo")
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.Property<string>("BankID")
                        .HasColumnType("text");

                    b.Property<string>("BankName")
                        .HasColumnType("text");

                    b.Property<string>("Branch")
                        .HasColumnType("text");

                    b.Property<string>("City")
                        .HasColumnType("text");

                    b.Property<string>("Country")
                        .HasColumnType("text");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("IFSC")
                        .HasColumnType("text");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("text");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Client", "Company", "Type", "PatnerID", "AccountNo");

                    b.ToTable("BPC_Fact_Bank");
                });

            modelBuilder.Entity("BPCloud_VP.FactService.Models.BPCFactBankSupport", b =>
                {
                    b.Property<string>("Client")
                        .HasMaxLength(3)
                        .HasColumnType("character varying(3)");

                    b.Property<string>("Company")
                        .HasMaxLength(4)
                        .HasColumnType("character varying(4)");

                    b.Property<string>("Type")
                        .HasMaxLength(1)
                        .HasColumnType("character varying(1)");

                    b.Property<string>("PatnerID")
                        .HasMaxLength(12)
                        .HasColumnType("character varying(12)");

                    b.Property<string>("AccountNo")
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.Property<string>("BankID")
                        .HasColumnType("text");

                    b.Property<string>("BankName")
                        .HasColumnType("text");

                    b.Property<string>("Branch")
                        .HasColumnType("text");

                    b.Property<string>("City")
                        .HasColumnType("text");

                    b.Property<string>("Country")
                        .HasColumnType("text");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("ID")
                        .HasColumnType("text");

                    b.Property<string>("IFSC")
                        .HasColumnType("text");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("text");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Client", "Company", "Type", "PatnerID", "AccountNo");

                    b.ToTable("BPC_Fact_Bank_Support");
                });

            modelBuilder.Entity("BPCloud_VP.FactService.Models.BPCFactContactPerson", b =>
                {
                    b.Property<string>("Client")
                        .HasMaxLength(3)
                        .HasColumnType("character varying(3)");

                    b.Property<string>("Company")
                        .HasMaxLength(4)
                        .HasColumnType("character varying(4)");

                    b.Property<string>("Type")
                        .HasMaxLength(1)
                        .HasColumnType("character varying(1)");

                    b.Property<string>("PatnerID")
                        .HasMaxLength(12)
                        .HasColumnType("character varying(12)");

                    b.Property<string>("ContactPersonID")
                        .HasMaxLength(12)
                        .HasColumnType("character varying(12)");

                    b.Property<string>("ContactNumber")
                        .HasColumnType("text");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Department")
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<string>("Item")
                        .HasColumnType("text");

                    b.Property<string>("Mobile")
                        .HasColumnType("text");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("text");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("Title")
                        .HasColumnType("text");

                    b.HasKey("Client", "Company", "Type", "PatnerID", "ContactPersonID");

                    b.ToTable("BPC_Fact_CP");
                });

            modelBuilder.Entity("BPCloud_VP.FactService.Models.BPCFactSupport", b =>
                {
                    b.Property<string>("Client")
                        .HasMaxLength(3)
                        .HasColumnType("character varying(3)");

                    b.Property<string>("Company")
                        .HasMaxLength(4)
                        .HasColumnType("character varying(4)");

                    b.Property<string>("Type")
                        .HasMaxLength(1)
                        .HasColumnType("character varying(1)");

                    b.Property<string>("PatnerID")
                        .HasMaxLength(12)
                        .HasColumnType("character varying(12)");

                    b.Property<string>("AccountGroup")
                        .HasColumnType("text");

                    b.Property<string>("AddressLine1")
                        .HasColumnType("text");

                    b.Property<string>("AddressLine2")
                        .HasColumnType("text");

                    b.Property<string>("City")
                        .HasColumnType("text");

                    b.Property<string>("CompanyCode")
                        .HasColumnType("text");

                    b.Property<string>("Country")
                        .HasColumnType("text");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<double>("CreditAmount")
                        .HasColumnType("double precision");

                    b.Property<double>("CreditBalance")
                        .HasColumnType("double precision");

                    b.Property<DateTime?>("CreditEvalDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<double>("CreditLimit")
                        .HasColumnType("double precision");

                    b.Property<string>("Currency")
                        .HasColumnType("text");

                    b.Property<string>("Email1")
                        .HasColumnType("text");

                    b.Property<string>("Email2")
                        .HasColumnType("text");

                    b.Property<string>("GSTNumber")
                        .HasColumnType("text");

                    b.Property<string>("GSTStatus")
                        .HasColumnType("text");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsBlocked")
                        .HasColumnType("boolean");

                    b.Property<double>("LastPayment")
                        .HasColumnType("double precision");

                    b.Property<DateTime?>("LastPaymentDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("LegalName")
                        .HasMaxLength(40)
                        .HasColumnType("character varying(40)");

                    b.Property<bool>("MSME")
                        .HasColumnType("boolean");

                    b.Property<string>("MSME_Att_ID")
                        .HasColumnType("text");

                    b.Property<string>("MSME_TYPE")
                        .HasColumnType("text");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("text");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<double>("OutstandingAmount")
                        .HasColumnType("double precision");

                    b.Property<string>("PANNumber")
                        .HasColumnType("text");

                    b.Property<string>("Phone1")
                        .HasColumnType("text");

                    b.Property<string>("Phone2")
                        .HasColumnType("text");

                    b.Property<string>("PinCode")
                        .HasColumnType("text");

                    b.Property<string>("Plant")
                        .HasColumnType("text");

                    b.Property<string>("PurchaseOrg")
                        .HasColumnType("text");

                    b.Property<bool>("RP")
                        .HasColumnType("boolean");

                    b.Property<string>("RP_Att_ID")
                        .HasColumnType("text");

                    b.Property<string>("RP_Name")
                        .HasColumnType("text");

                    b.Property<string>("RP_Type")
                        .HasColumnType("text");

                    b.Property<bool>("Reduced_TDS")
                        .HasColumnType("boolean");

                    b.Property<string>("Role")
                        .HasColumnType("text");

                    b.Property<string>("State")
                        .HasColumnType("text");

                    b.Property<string>("TDS_Att_ID")
                        .HasColumnType("text");

                    b.Property<string>("TDS_Cert_No")
                        .HasColumnType("text");

                    b.Property<string>("TDS_RATE")
                        .HasColumnType("text");

                    b.Property<string>("TaxID1")
                        .HasColumnType("text");

                    b.Property<string>("TaxID2")
                        .HasColumnType("text");

                    b.Property<string>("TypeofIndustry")
                        .HasColumnType("text");

                    b.Property<string>("VendorCode")
                        .HasColumnType("text");

                    b.HasKey("Client", "Company", "Type", "PatnerID");

                    b.ToTable("BPC_Fact_Support");
                });

            modelBuilder.Entity("BPCloud_VP.FactService.Models.BPCKRA", b =>
                {
                    b.Property<string>("Client")
                        .HasMaxLength(3)
                        .HasColumnType("character varying(3)");

                    b.Property<string>("Company")
                        .HasMaxLength(4)
                        .HasColumnType("character varying(4)");

                    b.Property<string>("Type")
                        .HasMaxLength(1)
                        .HasColumnType("character varying(1)");

                    b.Property<string>("PatnerID")
                        .HasMaxLength(12)
                        .HasColumnType("character varying(12)");

                    b.Property<string>("KRA")
                        .HasMaxLength(2)
                        .HasColumnType("character varying(2)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("EvalDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<string>("KRAText")
                        .HasColumnType("text");

                    b.Property<string>("KRAValue")
                        .HasColumnType("text");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("text");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Client", "Company", "Type", "PatnerID", "KRA");

                    b.ToTable("BPC_KRA");
                });
#pragma warning restore 612, 618
        }
    }
}

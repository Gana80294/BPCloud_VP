// <auto-generated />
using System;
using BPCloud_VP.SupportDeskService.DBContexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace BPCloud_VP.SupportDeskService.Migrations
{
    [DbContext(typeof(SupportDeskContext))]
    [Migration("20240617045724_initial")]
    partial class initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("BPCloud_VP.SupportDeskService.Models.BPCFAQAttachment", b =>
                {
                    b.Property<int>("FAQAttachmentID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("FAQAttachmentID"));

                    b.Property<byte[]>("AttachmentFile")
                        .HasColumnType("bytea");

                    b.Property<string>("AttachmentName")
                        .HasColumnType("text");

                    b.Property<long>("ContentLength")
                        .HasColumnType("bigint");

                    b.Property<string>("ContentType")
                        .HasColumnType("text");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("text");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("FAQAttachmentID");

                    b.ToTable("BPC_FAQ_Attachment");
                });

            modelBuilder.Entity("BPCloud_VP.SupportDeskService.Models.BPCSupportAttachment", b =>
                {
                    b.Property<int>("AttachmentID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("AttachmentID"));

                    b.Property<byte[]>("AttachmentFile")
                        .HasColumnType("bytea");

                    b.Property<string>("AttachmentName")
                        .HasColumnType("text");

                    b.Property<long>("ContentLength")
                        .HasColumnType("bigint");

                    b.Property<string>("ContentType")
                        .HasColumnType("text");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("text");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("SupportID")
                        .HasColumnType("text");

                    b.Property<string>("SupportLogID")
                        .HasColumnType("text");

                    b.HasKey("AttachmentID");

                    b.ToTable("BPC_Support_Attachment");
                });

            modelBuilder.Entity("BPCloud_VP.SupportDeskService.Models.SupportAppMaster", b =>
                {
                    b.Property<string>("Client")
                        .HasMaxLength(3)
                        .HasColumnType("character varying(3)");

                    b.Property<string>("Company")
                        .HasMaxLength(4)
                        .HasColumnType("character varying(4)");

                    b.Property<string>("Type")
                        .HasMaxLength(1)
                        .HasColumnType("character varying(1)");

                    b.Property<string>("AppID")
                        .HasMaxLength(24)
                        .HasColumnType("character varying(24)");

                    b.Property<string>("AppName")
                        .HasColumnType("text");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("text");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Client", "Company", "Type", "AppID");

                    b.ToTable("BPC_SAM");
                });

            modelBuilder.Entity("BPCloud_VP.SupportDeskService.Models.SupportHeader", b =>
                {
                    b.Property<string>("Client")
                        .HasMaxLength(3)
                        .HasColumnType("character varying(3)");

                    b.Property<string>("Company")
                        .HasMaxLength(4)
                        .HasColumnType("character varying(4)");

                    b.Property<string>("Type")
                        .HasMaxLength(1)
                        .HasColumnType("character varying(1)");

                    b.Property<string>("PatnerID")
                        .HasMaxLength(12)
                        .HasColumnType("character varying(12)");

                    b.Property<string>("SupportID")
                        .HasMaxLength(12)
                        .HasColumnType("character varying(12)");

                    b.Property<string>("AppID")
                        .HasColumnType("text");

                    b.Property<string>("AttachmentID")
                        .HasColumnType("text");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("DocCount")
                        .HasColumnType("text");

                    b.Property<string>("DocumentRefNo")
                        .HasColumnType("text");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsResolved")
                        .HasColumnType("boolean");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("text");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Plant")
                        .HasMaxLength(450)
                        .HasColumnType("character varying(450)");

                    b.Property<string>("ReasonCode")
                        .HasMaxLength(450)
                        .HasColumnType("character varying(450)");

                    b.Property<string>("Remarks")
                        .HasColumnType("text");

                    b.Property<string>("Status")
                        .HasColumnType("text");

                    b.HasKey("Client", "Company", "Type", "PatnerID", "SupportID");

                    b.HasIndex("ReasonCode", "Plant");

                    b.ToTable("BPC_SH");
                });

            modelBuilder.Entity("BPCloud_VP.SupportDeskService.Models.SupportLog", b =>
                {
                    b.Property<string>("Client")
                        .HasMaxLength(3)
                        .HasColumnType("character varying(3)");

                    b.Property<string>("Company")
                        .HasMaxLength(4)
                        .HasColumnType("character varying(4)");

                    b.Property<string>("Type")
                        .HasMaxLength(1)
                        .HasColumnType("character varying(1)");

                    b.Property<string>("PatnerID")
                        .HasMaxLength(12)
                        .HasColumnType("character varying(12)");

                    b.Property<string>("SupportID")
                        .HasMaxLength(12)
                        .HasColumnType("character varying(12)");

                    b.Property<string>("SupportLogID")
                        .HasMaxLength(12)
                        .HasColumnType("character varying(12)");

                    b.Property<string>("AttachmentID")
                        .HasColumnType("text");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsResolved")
                        .HasColumnType("boolean");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("text");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Remarks")
                        .HasColumnType("text");

                    b.HasKey("Client", "Company", "Type", "PatnerID", "SupportID", "SupportLogID");

                    b.ToTable("BPC_SL");
                });

            modelBuilder.Entity("BPCloud_VP.SupportDeskService.Models.SupportMaster", b =>
                {
                    b.Property<string>("Client")
                        .HasMaxLength(3)
                        .HasColumnType("character varying(3)");

                    b.Property<string>("Company")
                        .HasMaxLength(4)
                        .HasColumnType("character varying(4)");

                    b.Property<string>("Type")
                        .HasMaxLength(1)
                        .HasColumnType("character varying(1)");

                    b.Property<string>("ReasonCode")
                        .HasMaxLength(24)
                        .HasColumnType("character varying(24)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("text");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("ReasonText")
                        .HasColumnType("text");

                    b.HasKey("Client", "Company", "Type", "ReasonCode");

                    b.ToTable("BPC_SM");
                });
#pragma warning restore 612, 618
        }
    }
}

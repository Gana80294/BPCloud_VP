// <auto-generated />
using System;
using BPCloud_VP_POService.DBContexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace BPCloud_VP.POService.Migrations
{
    [DbContext(typeof(POContext))]
    [Migration("20240617043518_initial")]
    partial class initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("BPCloud_VP_POService.Models.BPCASNFieldMaster", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnOrder(1);

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ID"));

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("DefaultValue")
                        .HasColumnType("text");

                    b.Property<string>("DocType")
                        .HasColumnType("text");

                    b.Property<string>("Field")
                        .HasColumnType("text");

                    b.Property<string>("FieldName")
                        .HasColumnType("text");

                    b.Property<bool>("Invisible")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("Mandatory")
                        .HasColumnType("boolean");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("text");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Text")
                        .HasColumnType("text");

                    b.HasKey("ID");

                    b.HasIndex("Field");

                    b.ToTable("BPC_ASN_Field_Master");
                });

            modelBuilder.Entity("BPCloud_VP_POService.Models.BPCASNHeader", b =>
                {
                    b.Property<string>("Client")
                        .HasMaxLength(3)
                        .HasColumnType("character varying(3)");

                    b.Property<string>("Company")
                        .HasMaxLength(4)
                        .HasColumnType("character varying(4)");

                    b.Property<string>("Type")
                        .HasMaxLength(1)
                        .HasColumnType("character varying(1)");

                    b.Property<string>("PatnerID")
                        .HasMaxLength(12)
                        .HasColumnType("character varying(12)");

                    b.Property<string>("ASNNumber")
                        .HasMaxLength(12)
                        .HasColumnType("character varying(12)");

                    b.Property<DateTime?>("ASNDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("AWBDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("AWBNumber")
                        .HasColumnType("text");

                    b.Property<double?>("AccessibleValue")
                        .HasColumnType("double precision");

                    b.Property<DateTime?>("ArrivalDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("ArrivalDateInterval")
                        .HasColumnType("integer");

                    b.Property<string>("BillOfLading")
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.Property<DateTime?>("BuyerApprovalOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("BuyerApprovalStatus")
                        .HasColumnType("text");

                    b.Property<DateTime?>("CancelDuration")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("ContactPerson")
                        .HasMaxLength(40)
                        .HasColumnType("character varying(40)");

                    b.Property<string>("ContactPersonNo")
                        .HasMaxLength(14)
                        .HasColumnType("character varying(14)");

                    b.Property<string>("CountryOfOrigin")
                        .HasColumnType("text");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("DepartureDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("DocNumber")
                        .HasColumnType("text");

                    b.Property<string>("Field1")
                        .HasColumnType("text");

                    b.Property<string>("Field10")
                        .HasColumnType("text");

                    b.Property<string>("Field2")
                        .HasColumnType("text");

                    b.Property<string>("Field3")
                        .HasColumnType("text");

                    b.Property<string>("Field4")
                        .HasColumnType("text");

                    b.Property<string>("Field5")
                        .HasColumnType("text");

                    b.Property<string>("Field6")
                        .HasColumnType("text");

                    b.Property<string>("Field7")
                        .HasColumnType("text");

                    b.Property<string>("Field8")
                        .HasColumnType("text");

                    b.Property<string>("Field9")
                        .HasColumnType("text");

                    b.Property<string>("GateEntryCreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime?>("GateEntryDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("GateEntryNo")
                        .HasColumnType("text");

                    b.Property<double?>("GrossWeight")
                        .HasColumnType("double precision");

                    b.Property<string>("GrossWeightUOM")
                        .HasColumnType("text");

                    b.Property<string>("InvDocReferenceNo")
                        .HasColumnType("text");

                    b.Property<double?>("InvoiceAmount")
                        .HasColumnType("double precision");

                    b.Property<string>("InvoiceAmountUOM")
                        .HasColumnType("text");

                    b.Property<DateTime?>("InvoiceDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("InvoiceNumber")
                        .HasColumnType("text");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsBuyerApprovalRequired")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsSubmitted")
                        .HasColumnType("boolean");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("text");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<double?>("NetWeight")
                        .HasColumnType("double precision");

                    b.Property<string>("NetWeightUOM")
                        .HasColumnType("text");

                    b.Property<int?>("NumberOfPacks")
                        .HasColumnType("integer");

                    b.Property<double?>("POBasicPrice")
                        .HasColumnType("double precision");

                    b.Property<string>("Plant")
                        .HasColumnType("text");

                    b.Property<string>("ShippingAgency")
                        .HasColumnType("text");

                    b.Property<string>("Status")
                        .HasColumnType("text");

                    b.Property<double?>("TaxAmount")
                        .HasColumnType("double precision");

                    b.Property<string>("TransportMode")
                        .HasColumnType("text");

                    b.Property<string>("TransporterName")
                        .HasMaxLength(40)
                        .HasColumnType("character varying(40)");

                    b.Property<string>("VessleNumber")
                        .HasColumnType("text");

                    b.Property<double?>("VolumetricWeight")
                        .HasColumnType("double precision");

                    b.Property<string>("VolumetricWeightUOM")
                        .HasColumnType("text");

                    b.HasKey("Client", "Company", "Type", "PatnerID", "ASNNumber");

                    b.ToTable("BPC_ASN_H");
                });

            modelBuilder.Entity("BPCloud_VP_POService.Models.BPCASNHeader1", b =>
                {
                    b.Property<string>("Client")
                        .HasMaxLength(3)
                        .HasColumnType("character varying(3)");

                    b.Property<string>("Company")
                        .HasMaxLength(4)
                        .HasColumnType("character varying(4)");

                    b.Property<string>("Type")
                        .HasMaxLength(1)
                        .HasColumnType("character varying(1)");

                    b.Property<string>("PatnerID")
                        .HasMaxLength(12)
                        .HasColumnType("character varying(12)");

                    b.Property<string>("ASNNumber")
                        .HasMaxLength(12)
                        .HasColumnType("character varying(12)");

                    b.Property<DateTime?>("ASNDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("AWBDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("AWBNumber")
                        .HasColumnType("text");

                    b.Property<double?>("AccessibleValue")
                        .HasColumnType("double precision");

                    b.Property<DateTime?>("ArrivalDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("ArrivalDateInterval")
                        .HasColumnType("integer");

                    b.Property<string>("BillOfLading")
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.Property<DateTime?>("BuyerApprovalOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("BuyerApprovalStatus")
                        .HasColumnType("text");

                    b.Property<DateTime?>("CancelDuration")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("ContactPerson")
                        .HasMaxLength(40)
                        .HasColumnType("character varying(40)");

                    b.Property<string>("ContactPersonNo")
                        .HasMaxLength(14)
                        .HasColumnType("character varying(14)");

                    b.Property<string>("CountryOfOrigin")
                        .HasColumnType("text");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("DepartureDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("DocNumber")
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.Property<string>("Field1")
                        .HasColumnType("text");

                    b.Property<string>("Field10")
                        .HasColumnType("text");

                    b.Property<string>("Field2")
                        .HasColumnType("text");

                    b.Property<string>("Field3")
                        .HasColumnType("text");

                    b.Property<string>("Field4")
                        .HasColumnType("text");

                    b.Property<string>("Field5")
                        .HasColumnType("text");

                    b.Property<string>("Field6")
                        .HasColumnType("text");

                    b.Property<string>("Field7")
                        .HasColumnType("text");

                    b.Property<string>("Field8")
                        .HasColumnType("text");

                    b.Property<string>("Field9")
                        .HasColumnType("text");

                    b.Property<string>("GateEntryCreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime?>("GateEntryDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("GateEntryNo")
                        .HasColumnType("text");

                    b.Property<double?>("GrossWeight")
                        .HasColumnType("double precision");

                    b.Property<string>("GrossWeightUOM")
                        .HasColumnType("text");

                    b.Property<string>("InvDocReferenceNo")
                        .HasColumnType("text");

                    b.Property<double?>("InvoiceAmount")
                        .HasColumnType("double precision");

                    b.Property<string>("InvoiceAmountUOM")
                        .HasColumnType("text");

                    b.Property<DateTime?>("InvoiceDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("InvoiceNumber")
                        .HasColumnType("text");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsBuyerApprovalRequired")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsSubmitted")
                        .HasColumnType("boolean");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("text");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<double?>("NetWeight")
                        .HasColumnType("double precision");

                    b.Property<string>("NetWeightUOM")
                        .HasColumnType("text");

                    b.Property<int?>("NumberOfPacks")
                        .HasColumnType("integer");

                    b.Property<double?>("POBasicPrice")
                        .HasColumnType("double precision");

                    b.Property<string>("Plant")
                        .HasColumnType("text");

                    b.Property<string>("PurchaseGroup")
                        .HasColumnType("text");

                    b.Property<string>("ShippingAgency")
                        .HasColumnType("text");

                    b.Property<string>("Status")
                        .HasColumnType("text");

                    b.Property<double?>("TaxAmount")
                        .HasColumnType("double precision");

                    b.Property<string>("TransportMode")
                        .HasColumnType("text");

                    b.Property<string>("TransporterName")
                        .HasMaxLength(40)
                        .HasColumnType("character varying(40)");

                    b.Property<string>("VessleNumber")
                        .HasColumnType("text");

                    b.Property<double?>("VolumetricWeight")
                        .HasColumnType("double precision");

                    b.Property<string>("VolumetricWeightUOM")
                        .HasColumnType("text");

                    b.HasKey("Client", "Company", "Type", "PatnerID", "ASNNumber");

                    b.ToTable("BPC_ASN_H1");
                });

            modelBuilder.Entity("BPCloud_VP_POService.Models.BPCASNItem", b =>
                {
                    b.Property<string>("Client")
                        .HasMaxLength(3)
                        .HasColumnType("character varying(3)");

                    b.Property<string>("Company")
                        .HasMaxLength(4)
                        .HasColumnType("character varying(4)");

                    b.Property<string>("Type")
                        .HasMaxLength(1)
                        .HasColumnType("character varying(1)");

                    b.Property<string>("PatnerID")
                        .HasMaxLength(12)
                        .HasColumnType("character varying(12)");

                    b.Property<string>("ASNNumber")
                        .HasMaxLength(12)
                        .HasColumnType("character varying(12)");

                    b.Property<string>("Item")
                        .HasMaxLength(4)
                        .HasColumnType("character varying(4)");

                    b.Property<double>("ASNQty")
                        .HasColumnType("double precision");

                    b.Property<double>("CompletedQty")
                        .HasColumnType("double precision");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("DeliveryDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<double?>("FreightAmount")
                        .HasColumnType("double precision");

                    b.Property<string>("HSN")
                        .HasColumnType("text");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsFreightAvailable")
                        .HasColumnType("boolean");

                    b.Property<string>("Material")
                        .HasColumnType("text");

                    b.Property<string>("MaterialText")
                        .HasColumnType("text");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("text");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<double>("OpenQty")
                        .HasColumnType("double precision");

                    b.Property<double>("OrderedQty")
                        .HasColumnType("double precision");

                    b.Property<string>("PlantCode")
                        .HasColumnType("text");

                    b.Property<double?>("TaxAmount")
                        .HasColumnType("double precision");

                    b.Property<string>("TaxCode")
                        .HasColumnType("text");

                    b.Property<double?>("ToleranceLowerLimit")
                        .HasColumnType("double precision");

                    b.Property<double?>("ToleranceUpperLimit")
                        .HasColumnType("double precision");

                    b.Property<double>("TransitQty")
                        .HasColumnType("double precision");

                    b.Property<string>("UOM")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<double?>("UnitPrice")
                        .HasColumnType("double precision");

                    b.Property<double?>("Value")
                        .HasColumnType("double precision");

                    b.HasKey("Client", "Company", "Type", "PatnerID", "ASNNumber", "Item");

                    b.ToTable("BPC_ASN_I");
                });

            modelBuilder.Entity("BPCloud_VP_POService.Models.BPCASNItem1", b =>
                {
                    b.Property<string>("Client")
                        .HasMaxLength(3)
                        .HasColumnType("character varying(3)");

                    b.Property<string>("Company")
                        .HasMaxLength(4)
                        .HasColumnType("character varying(4)");

                    b.Property<string>("Type")
                        .HasMaxLength(1)
                        .HasColumnType("character varying(1)");

                    b.Property<string>("PatnerID")
                        .HasMaxLength(12)
                        .HasColumnType("character varying(12)");

                    b.Property<string>("ASNNumber")
                        .HasMaxLength(12)
                        .HasColumnType("character varying(12)");

                    b.Property<string>("DocNumber")
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.Property<string>("Item")
                        .HasMaxLength(4)
                        .HasColumnType("character varying(4)");

                    b.Property<double>("ASNQty")
                        .HasColumnType("double precision");

                    b.Property<double>("CompletedQty")
                        .HasColumnType("double precision");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("DeliveryDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<double?>("FreightAmount")
                        .HasColumnType("double precision");

                    b.Property<string>("HSN")
                        .HasColumnType("text");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsFreightAvailable")
                        .HasColumnType("boolean");

                    b.Property<string>("Material")
                        .HasColumnType("text");

                    b.Property<string>("MaterialText")
                        .HasColumnType("text");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("text");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<double>("OpenQty")
                        .HasColumnType("double precision");

                    b.Property<double>("OrderedQty")
                        .HasColumnType("double precision");

                    b.Property<string>("PlantCode")
                        .HasColumnType("text");

                    b.Property<double?>("TaxAmount")
                        .HasColumnType("double precision");

                    b.Property<string>("TaxCode")
                        .HasColumnType("text");

                    b.Property<double?>("ToleranceLowerLimit")
                        .HasColumnType("double precision");

                    b.Property<double?>("ToleranceUpperLimit")
                        .HasColumnType("double precision");

                    b.Property<double>("TransitQty")
                        .HasColumnType("double precision");

                    b.Property<string>("UOM")
                        .HasColumnType("text");

                    b.Property<double?>("UnitPrice")
                        .HasColumnType("double precision");

                    b.Property<double?>("Value")
                        .HasColumnType("double precision");

                    b.HasKey("Client", "Company", "Type", "PatnerID", "ASNNumber", "DocNumber", "Item");

                    b.ToTable("BPC_ASN_I1");
                });

            modelBuilder.Entity("BPCloud_VP_POService.Models.BPCASNItemBatch", b =>
                {
                    b.Property<string>("Client")
                        .HasMaxLength(3)
                        .HasColumnType("character varying(3)");

                    b.Property<string>("Company")
                        .HasMaxLength(4)
                        .HasColumnType("character varying(4)");

                    b.Property<string>("Type")
                        .HasMaxLength(1)
                        .HasColumnType("character varying(1)");

                    b.Property<string>("PatnerID")
                        .HasMaxLength(12)
                        .HasColumnType("character varying(12)");

                    b.Property<string>("ASNNumber")
                        .HasMaxLength(12)
                        .HasColumnType("character varying(12)");

                    b.Property<string>("Item")
                        .HasMaxLength(4)
                        .HasColumnType("character varying(4)");

                    b.Property<string>("Batch")
                        .HasMaxLength(24)
                        .HasColumnType("character varying(24)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("ExpiryDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<string>("ManufactureCountry")
                        .HasColumnType("text");

                    b.Property<DateTime?>("ManufactureDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("text");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<double>("Qty")
                        .HasColumnType("double precision");

                    b.HasKey("Client", "Company", "Type", "PatnerID", "ASNNumber", "Item", "Batch");

                    b.ToTable("BPC_ASN_I_Batch");
                });

            modelBuilder.Entity("BPCloud_VP_POService.Models.BPCASNItemBatch1", b =>
                {
                    b.Property<string>("Client")
                        .HasMaxLength(3)
                        .HasColumnType("character varying(3)");

                    b.Property<string>("Company")
                        .HasMaxLength(4)
                        .HasColumnType("character varying(4)");

                    b.Property<string>("Type")
                        .HasMaxLength(1)
                        .HasColumnType("character varying(1)");

                    b.Property<string>("PatnerID")
                        .HasMaxLength(12)
                        .HasColumnType("character varying(12)");

                    b.Property<string>("ASNNumber")
                        .HasMaxLength(12)
                        .HasColumnType("character varying(12)");

                    b.Property<string>("DocNumber")
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.Property<string>("Item")
                        .HasMaxLength(4)
                        .HasColumnType("character varying(4)");

                    b.Property<string>("Batch")
                        .HasMaxLength(24)
                        .HasColumnType("character varying(24)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("ExpiryDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<string>("ManufactureCountry")
                        .HasColumnType("text");

                    b.Property<DateTime?>("ManufactureDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("text");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<double>("Qty")
                        .HasColumnType("double precision");

                    b.HasKey("Client", "Company", "Type", "PatnerID", "ASNNumber", "DocNumber", "Item", "Batch");

                    b.ToTable("BPC_ASN_I_Batch1");
                });

            modelBuilder.Entity("BPCloud_VP_POService.Models.BPCASNItemSES", b =>
                {
                    b.Property<string>("Client")
                        .HasMaxLength(3)
                        .HasColumnType("character varying(3)");

                    b.Property<string>("Company")
                        .HasMaxLength(4)
                        .HasColumnType("character varying(4)");

                    b.Property<string>("Type")
                        .HasMaxLength(1)
                        .HasColumnType("character varying(1)");

                    b.Property<string>("PatnerID")
                        .HasMaxLength(12)
                        .HasColumnType("character varying(12)");

                    b.Property<string>("ASNNumber")
                        .HasMaxLength(12)
                        .HasColumnType("character varying(12)");

                    b.Property<string>("Item")
                        .HasMaxLength(4)
                        .HasColumnType("character varying(4)");

                    b.Property<string>("ServiceNo")
                        .HasMaxLength(24)
                        .HasColumnType("character varying(24)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("text");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<double>("OpenQty")
                        .HasColumnType("double precision");

                    b.Property<double>("OrderedQty")
                        .HasColumnType("double precision");

                    b.Property<string>("ServiceItem")
                        .HasColumnType("text");

                    b.Property<double>("ServiceQty")
                        .HasColumnType("double precision");

                    b.HasKey("Client", "Company", "Type", "PatnerID", "ASNNumber", "Item", "ServiceNo");

                    b.ToTable("BPC_ASN_I_SES");
                });

            modelBuilder.Entity("BPCloud_VP_POService.Models.BPCASNItemSES1", b =>
                {
                    b.Property<string>("Client")
                        .HasMaxLength(3)
                        .HasColumnType("character varying(3)");

                    b.Property<string>("Company")
                        .HasMaxLength(4)
                        .HasColumnType("character varying(4)");

                    b.Property<string>("Type")
                        .HasMaxLength(1)
                        .HasColumnType("character varying(1)");

                    b.Property<string>("PatnerID")
                        .HasMaxLength(12)
                        .HasColumnType("character varying(12)");

                    b.Property<string>("ASNNumber")
                        .HasMaxLength(12)
                        .HasColumnType("character varying(12)");

                    b.Property<string>("DocNumber")
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.Property<string>("Item")
                        .HasMaxLength(4)
                        .HasColumnType("character varying(4)");

                    b.Property<string>("ServiceNo")
                        .HasMaxLength(24)
                        .HasColumnType("character varying(24)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("text");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<double>("OpenQty")
                        .HasColumnType("double precision");

                    b.Property<double>("OrderedQty")
                        .HasColumnType("double precision");

                    b.Property<string>("ServiceItem")
                        .HasColumnType("text");

                    b.Property<double>("ServiceQty")
                        .HasColumnType("double precision");

                    b.HasKey("Client", "Company", "Type", "PatnerID", "ASNNumber", "DocNumber", "Item", "ServiceNo");

                    b.ToTable("BPC_ASN_I_SES1");
                });

            modelBuilder.Entity("BPCloud_VP_POService.Models.BPCASNOFMap1", b =>
                {
                    b.Property<string>("Client")
                        .HasMaxLength(3)
                        .HasColumnType("character varying(3)");

                    b.Property<string>("Company")
                        .HasMaxLength(4)
                        .HasColumnType("character varying(4)");

                    b.Property<string>("Type")
                        .HasMaxLength(1)
                        .HasColumnType("character varying(1)");

                    b.Property<string>("PatnerID")
                        .HasMaxLength(12)
                        .HasColumnType("character varying(12)");

                    b.Property<string>("ASNNumber")
                        .HasMaxLength(12)
                        .HasColumnType("character varying(12)");

                    b.Property<string>("DocNumber")
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("text");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Client", "Company", "Type", "PatnerID", "ASNNumber", "DocNumber");

                    b.ToTable("BPC_ASN_OF_Map1");
                });

            modelBuilder.Entity("BPCloud_VP_POService.Models.BPCASNPack", b =>
                {
                    b.Property<string>("Client")
                        .HasMaxLength(3)
                        .HasColumnType("character varying(3)");

                    b.Property<string>("Company")
                        .HasMaxLength(4)
                        .HasColumnType("character varying(4)");

                    b.Property<string>("Type")
                        .HasMaxLength(1)
                        .HasColumnType("character varying(1)");

                    b.Property<string>("PatnerID")
                        .HasMaxLength(12)
                        .HasColumnType("character varying(12)");

                    b.Property<string>("ASNNumber")
                        .HasMaxLength(12)
                        .HasColumnType("character varying(12)");

                    b.Property<string>("PackageID")
                        .HasMaxLength(12)
                        .HasColumnType("character varying(12)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Dimension")
                        .HasColumnType("text");

                    b.Property<double?>("GrossWeight")
                        .HasColumnType("double precision");

                    b.Property<string>("GrossWeightUOM")
                        .HasColumnType("text");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("text");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<double?>("NetWeight")
                        .HasColumnType("double precision");

                    b.Property<string>("NetWeightUOM")
                        .HasColumnType("text");

                    b.Property<string>("ReferenceNumber")
                        .HasColumnType("text");

                    b.Property<double?>("VolumetricWeight")
                        .HasColumnType("double precision");

                    b.Property<string>("VolumetricWeightUOM")
                        .HasColumnType("text");

                    b.HasKey("Client", "Company", "Type", "PatnerID", "ASNNumber", "PackageID");

                    b.ToTable("BPC_ASN_Pack");
                });

            modelBuilder.Entity("BPCloud_VP_POService.Models.BPCASNPreShipmentMaster", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnOrder(1);

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ID"));

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("text");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("PreShipmentDay")
                        .HasColumnType("integer");

                    b.HasKey("ID");

                    b.ToTable("BPC_ASN_PRE_SHIP_MASTER");
                });

            modelBuilder.Entity("BPCloud_VP_POService.Models.BPCAttachment", b =>
                {
                    b.Property<int>("AttachmentID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("AttachmentID"));

                    b.Property<byte[]>("AttachmentFile")
                        .HasColumnType("bytea");

                    b.Property<string>("AttachmentName")
                        .HasColumnType("text");

                    b.Property<string>("Client")
                        .HasColumnType("text");

                    b.Property<string>("Company")
                        .HasColumnType("text");

                    b.Property<long>("ContentLength")
                        .HasColumnType("bigint");

                    b.Property<string>("ContentType")
                        .HasColumnType("text");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("text");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("PatnerID")
                        .HasColumnType("text");

                    b.Property<string>("ReferenceNo")
                        .HasColumnType("text");

                    b.Property<string>("Type")
                        .HasColumnType("text");

                    b.HasKey("AttachmentID");

                    b.ToTable("BPCAttachments");
                });

            modelBuilder.Entity("BPCloud_VP_POService.Models.BPCCEOMessage", b =>
                {
                    b.Property<int>("MessageID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("MessageID"));

                    b.Property<string>("CEOMessage")
                        .HasColumnType("text");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsReleased")
                        .HasColumnType("boolean");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("text");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("MessageID");

                    b.ToTable("BPC_CEO_Message");
                });

            modelBuilder.Entity("BPCloud_VP_POService.Models.BPCCompanyMaster", b =>
                {
                    b.Property<string>("Company")
                        .HasColumnType("text")
                        .HasColumnOrder(1);

                    b.Property<string>("CompanyName")
                        .HasColumnType("text");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("text");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Company");

                    b.ToTable("BPC_Company_Master");
                });

            modelBuilder.Entity("BPCloud_VP_POService.Models.BPCCountryMaster", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnOrder(1);

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ID"));

                    b.Property<string>("CountryCode")
                        .HasColumnType("text");

                    b.Property<string>("CountryName")
                        .HasColumnType("text");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("text");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("ID");

                    b.ToTable("BPC_Country_Master");
                });

            modelBuilder.Entity("BPCloud_VP_POService.Models.BPCCurrencyMaster", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnOrder(1);

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ID"));

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("CurrencyCode")
                        .HasColumnType("text");

                    b.Property<string>("CurrencyName")
                        .HasColumnType("text");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("text");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("ID");

                    b.ToTable("BPC_Currency_Master");
                });

            modelBuilder.Entity("BPCloud_VP_POService.Models.BPCDocumentCenter", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnOrder(1);

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ID"));

                    b.Property<string>("ASNNumber")
                        .HasColumnType("text");

                    b.Property<string>("AttachmentReferenceNo")
                        .HasColumnType("text");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("DocumentTitle")
                        .HasColumnType("text");

                    b.Property<string>("DocumentType")
                        .HasColumnType("text");

                    b.Property<string>("Filename")
                        .HasColumnType("text");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("text");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("ID");

                    b.ToTable("BPC_DocumentCenter");
                });

            modelBuilder.Entity("BPCloud_VP_POService.Models.BPCDocumentCenterMaster", b =>
                {
                    b.Property<string>("DocumentType")
                        .HasColumnType("text");

                    b.Property<int>("AppID")
                        .HasColumnType("integer")
                        .HasColumnOrder(1);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Extension")
                        .HasColumnType("text");

                    b.Property<string>("ForwardMail")
                        .HasColumnType("text");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("Mandatory")
                        .HasColumnType("boolean");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("text");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<double>("SizeInKB")
                        .HasColumnType("double precision");

                    b.Property<string>("Text")
                        .HasColumnType("text");

                    b.HasKey("DocumentType");

                    b.ToTable("BPC_DocumentCenter_Master");
                });

            modelBuilder.Entity("BPCloud_VP_POService.Models.BPCExpenseTypeMaster", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnOrder(1);

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ID"));

                    b.Property<string>("Client")
                        .HasColumnType("text");

                    b.Property<string>("Company")
                        .HasColumnType("text");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("ExpenseType")
                        .HasColumnType("text");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<string>("MaxAmount")
                        .HasColumnType("text");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("text");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("PatnerID")
                        .HasColumnType("text");

                    b.Property<string>("Type")
                        .HasColumnType("text");

                    b.HasKey("ID");

                    b.ToTable("BPC_ExpenseType_Master");
                });

            modelBuilder.Entity("BPCloud_VP_POService.Models.BPCFLIPAttachment", b =>
                {
                    b.Property<int>("AttachmentID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("AttachmentID"));

                    b.Property<byte[]>("AttachmentFile")
                        .HasColumnType("bytea");

                    b.Property<string>("AttachmentName")
                        .HasColumnType("text");

                    b.Property<long>("ContentLength")
                        .HasColumnType("bigint");

                    b.Property<string>("ContentType")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("FLIPID")
                        .HasMaxLength(12)
                        .HasColumnType("character varying(12)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("text");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("PO")
                        .HasColumnType("text");

                    b.HasKey("AttachmentID");

                    b.HasIndex("FLIPID");

                    b.ToTable("BPC_FLIP_Attachment");
                });

            modelBuilder.Entity("BPCloud_VP_POService.Models.BPCFLIPCost", b =>
                {
                    b.Property<string>("Client")
                        .HasMaxLength(3)
                        .HasColumnType("character varying(3)");

                    b.Property<string>("Company")
                        .HasMaxLength(4)
                        .HasColumnType("character varying(4)");

                    b.Property<string>("Type")
                        .HasMaxLength(1)
                        .HasColumnType("character varying(1)");

                    b.Property<string>("PatnerID")
                        .HasMaxLength(12)
                        .HasColumnType("character varying(12)");

                    b.Property<string>("FLIPID")
                        .HasMaxLength(12)
                        .HasColumnType("character varying(12)");

                    b.Property<string>("ExpenceType")
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)");

                    b.Property<double>("Amount")
                        .HasColumnType("double precision");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("text");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Remarks")
                        .HasColumnType("text");

                    b.HasKey("Client", "Company", "Type", "PatnerID", "FLIPID", "ExpenceType");

                    b.ToTable("BPC_FLIP_Cost");
                });

            modelBuilder.Entity("BPCloud_VP_POService.Models.BPCFLIPHeader", b =>
                {
                    b.Property<string>("Client")
                        .HasMaxLength(3)
                        .HasColumnType("character varying(3)");

                    b.Property<string>("Company")
                        .HasMaxLength(4)
                        .HasColumnType("character varying(4)");

                    b.Property<string>("Type")
                        .HasMaxLength(1)
                        .HasColumnType("character varying(1)");

                    b.Property<string>("PatnerID")
                        .HasMaxLength(12)
                        .HasColumnType("character varying(12)");

                    b.Property<string>("FLIPID")
                        .HasMaxLength(12)
                        .HasColumnType("character varying(12)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("DocNumber")
                        .HasColumnType("text");

                    b.Property<string>("GSTIN")
                        .HasColumnType("text");

                    b.Property<double?>("InvoiceAmount")
                        .HasColumnType("double precision");

                    b.Property<string>("InvoiceAttachmentName")
                        .HasColumnType("text");

                    b.Property<string>("InvoiceCurrency")
                        .HasColumnType("text");

                    b.Property<DateTime?>("InvoiceDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("InvoiceDocID")
                        .HasColumnType("text");

                    b.Property<string>("InvoiceNumber")
                        .HasColumnType("text");

                    b.Property<string>("InvoiceType")
                        .HasColumnType("text");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<string>("IsInvoiceFlag")
                        .HasColumnType("text");

                    b.Property<string>("IsInvoiceOrCertified")
                        .HasColumnType("text");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("text");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Plant")
                        .HasColumnType("text");

                    b.Property<string>("ProfitCentre")
                        .HasColumnType("text");

                    b.HasKey("Client", "Company", "Type", "PatnerID", "FLIPID");

                    b.ToTable("BPC_FLIP_H");
                });

            modelBuilder.Entity("BPCloud_VP_POService.Models.BPCFLIPItem", b =>
                {
                    b.Property<string>("Client")
                        .HasMaxLength(3)
                        .HasColumnType("character varying(3)");

                    b.Property<string>("Company")
                        .HasMaxLength(4)
                        .HasColumnType("character varying(4)");

                    b.Property<string>("Type")
                        .HasMaxLength(1)
                        .HasColumnType("character varying(1)");

                    b.Property<string>("PatnerID")
                        .HasMaxLength(12)
                        .HasColumnType("character varying(12)");

                    b.Property<string>("FLIPID")
                        .HasMaxLength(12)
                        .HasColumnType("character varying(12)");

                    b.Property<string>("Item")
                        .HasMaxLength(4)
                        .HasColumnType("character varying(4)");

                    b.Property<double>("Amount")
                        .HasColumnType("double precision");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("DeliveryDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("HSN")
                        .HasColumnType("text");

                    b.Property<double>("InvoiceQty")
                        .HasColumnType("double precision");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<string>("Material")
                        .HasColumnType("text");

                    b.Property<string>("MaterialText")
                        .HasColumnType("text");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("text");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<double?>("OpenQty")
                        .HasColumnType("double precision");

                    b.Property<double?>("OrderedQty")
                        .HasColumnType("double precision");

                    b.Property<double>("Price")
                        .HasColumnType("double precision");

                    b.Property<double>("Tax")
                        .HasColumnType("double precision");

                    b.Property<string>("TaxType")
                        .HasColumnType("text");

                    b.Property<string>("UOM")
                        .HasColumnType("text");

                    b.HasKey("Client", "Company", "Type", "PatnerID", "FLIPID", "Item");

                    b.ToTable("BPC_FLIP_I");
                });

            modelBuilder.Entity("BPCloud_VP_POService.Models.BPCGateEntry", b =>
                {
                    b.Property<string>("Client")
                        .HasMaxLength(3)
                        .HasColumnType("character varying(3)");

                    b.Property<string>("Company")
                        .HasMaxLength(4)
                        .HasColumnType("character varying(4)");

                    b.Property<string>("Type")
                        .HasMaxLength(1)
                        .HasColumnType("character varying(1)");

                    b.Property<string>("PatnerID")
                        .HasMaxLength(12)
                        .HasColumnType("character varying(12)");

                    b.Property<string>("ASNNumber")
                        .HasColumnType("text");

                    b.Property<string>("DocNumber")
                        .HasColumnType("text");

                    b.Property<int>("GateEntryNo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("GateEntryNo"));

                    b.Property<DateTime?>("ArrivalDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("DepartureDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("GateEntryTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("text");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Plant")
                        .HasColumnType("text");

                    b.Property<string>("Status")
                        .HasColumnType("text");

                    b.Property<string>("Transporter")
                        .HasColumnType("text");

                    b.Property<string>("VessleNumber")
                        .HasColumnType("text");

                    b.HasKey("Client", "Company", "Type", "PatnerID", "ASNNumber", "DocNumber", "GateEntryNo");

                    b.ToTable("BPC_GateEntry");
                });

            modelBuilder.Entity("BPCloud_VP_POService.Models.BPCGateHoveringVechicles", b =>
                {
                    b.Property<string>("Client")
                        .HasMaxLength(3)
                        .HasColumnType("character varying(3)");

                    b.Property<string>("Company")
                        .HasMaxLength(4)
                        .HasColumnType("character varying(4)");

                    b.Property<string>("Type")
                        .HasMaxLength(1)
                        .HasColumnType("character varying(1)");

                    b.Property<string>("PatnerID")
                        .HasMaxLength(12)
                        .HasColumnType("character varying(12)");

                    b.Property<string>("DocNo")
                        .HasMaxLength(450)
                        .HasColumnType("character varying(450)");

                    b.Property<string>("Partner")
                        .HasMaxLength(450)
                        .HasColumnType("character varying(450)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Gate")
                        .HasColumnType("text");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("text");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Plant")
                        .HasColumnType("text");

                    b.Property<DateTime?>("Time")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Transporter")
                        .HasColumnType("text");

                    b.Property<string>("Truck")
                        .HasColumnType("text");

                    b.HasKey("Client", "Company", "Type", "PatnerID", "DocNo", "Partner");

                    b.ToTable("BPC_Gate_HV");
                });

            modelBuilder.Entity("BPCloud_VP_POService.Models.BPCGateVechicleTurnAroundTime", b =>
                {
                    b.Property<string>("Client")
                        .HasMaxLength(3)
                        .HasColumnType("character varying(3)");

                    b.Property<string>("Company")
                        .HasMaxLength(4)
                        .HasColumnType("character varying(4)");

                    b.Property<string>("Type")
                        .HasMaxLength(1)
                        .HasColumnType("character varying(1)");

                    b.Property<string>("PatnerID")
                        .HasMaxLength(12)
                        .HasColumnType("character varying(12)");

                    b.Property<string>("DocNo")
                        .HasMaxLength(450)
                        .HasColumnType("character varying(450)");

                    b.Property<string>("Partner")
                        .HasMaxLength(450)
                        .HasColumnType("character varying(450)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("EntryDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("EntryTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Exception")
                        .HasColumnType("text");

                    b.Property<string>("ExitDt")
                        .HasColumnType("text");

                    b.Property<string>("ExitTime")
                        .HasColumnType("text");

                    b.Property<string>("Gate")
                        .HasColumnType("text");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("text");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("TATime")
                        .HasColumnType("text");

                    b.Property<string>("Transporter")
                        .HasColumnType("text");

                    b.Property<string>("Truck")
                        .HasColumnType("text");

                    b.HasKey("Client", "Company", "Type", "PatnerID", "DocNo", "Partner");

                    b.ToTable("BPC_Gate_TA");
                });

            modelBuilder.Entity("BPCloud_VP_POService.Models.BPCHSNMaster", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnOrder(1);

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ID"));

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("HSNCode")
                        .HasColumnType("text");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("text");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("ID");

                    b.ToTable("BPC_HSN_Master");
                });

            modelBuilder.Entity("BPCloud_VP_POService.Models.BPCInvoice", b =>
                {
                    b.Property<string>("Client")
                        .HasMaxLength(3)
                        .HasColumnType("character varying(3)");

                    b.Property<string>("Company")
                        .HasMaxLength(4)
                        .HasColumnType("character varying(4)");

                    b.Property<string>("Type")
                        .HasMaxLength(1)
                        .HasColumnType("character varying(1)");

                    b.Property<string>("PatnerID")
                        .HasMaxLength(12)
                        .HasColumnType("character varying(12)");

                    b.Property<string>("FiscalYear")
                        .HasMaxLength(4)
                        .HasColumnType("character varying(4)");

                    b.Property<string>("InvoiceNo")
                        .HasMaxLength(16)
                        .HasColumnType("character varying(16)");

                    b.Property<string>("AWBNumber")
                        .HasColumnType("text");

                    b.Property<string>("AttID")
                        .HasColumnType("text");

                    b.Property<double?>("BalanceAmount")
                        .HasColumnType("double precision");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Currency")
                        .HasColumnType("text");

                    b.Property<DateTime?>("DateofPayment")
                        .HasColumnType("timestamp with time zone");

                    b.Property<double>("InvoiceAmount")
                        .HasColumnType("double precision");

                    b.Property<DateTime?>("InvoiceDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("text");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("PODConfirmedBy")
                        .HasColumnType("text");

                    b.Property<DateTime?>("PODDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<double>("PaidAmount")
                        .HasColumnType("double precision");

                    b.Property<string>("Plant")
                        .HasColumnType("text");

                    b.Property<string>("PoReference")
                        .HasColumnType("text");

                    b.Property<string>("Status")
                        .HasColumnType("text");

                    b.HasKey("Client", "Company", "Type", "PatnerID", "FiscalYear", "InvoiceNo");

                    b.ToTable("BPC_INV");
                });

            modelBuilder.Entity("BPCloud_VP_POService.Models.BPCInvoiceItem", b =>
                {
                    b.Property<string>("Client")
                        .HasMaxLength(3)
                        .HasColumnType("character varying(3)");

                    b.Property<string>("Company")
                        .HasMaxLength(4)
                        .HasColumnType("character varying(4)");

                    b.Property<string>("Type")
                        .HasMaxLength(1)
                        .HasColumnType("character varying(1)");

                    b.Property<string>("PatnerID")
                        .HasMaxLength(12)
                        .HasColumnType("character varying(12)");

                    b.Property<string>("FiscalYear")
                        .HasMaxLength(4)
                        .HasColumnType("character varying(4)");

                    b.Property<string>("InvoiceNo")
                        .HasMaxLength(16)
                        .HasColumnType("character varying(16)");

                    b.Property<string>("Item")
                        .HasMaxLength(12)
                        .HasColumnType("character varying(12)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<double>("InvoiceQty")
                        .HasColumnType("double precision");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<string>("Material")
                        .HasColumnType("text");

                    b.Property<string>("MaterialText")
                        .HasColumnType("text");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("text");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<double>("PODQty")
                        .HasColumnType("double precision");

                    b.Property<string>("ReasonCode")
                        .HasColumnType("text");

                    b.Property<string>("Status")
                        .HasColumnType("text");

                    b.HasKey("Client", "Company", "Type", "PatnerID", "FiscalYear", "InvoiceNo", "Item");

                    b.ToTable("BPC_INV_I");
                });

            modelBuilder.Entity("BPCloud_VP_POService.Models.BPCLog", b =>
                {
                    b.Property<int>("LogID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("LogID"));

                    b.Property<string>("APIMethod")
                        .HasColumnType("text");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("LogDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("text");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("NoOfRecords")
                        .HasColumnType("integer");

                    b.Property<string>("Response")
                        .HasColumnType("text");

                    b.Property<string>("Status")
                        .HasColumnType("text");

                    b.HasKey("LogID");

                    b.ToTable("BPC_LOG");
                });

            modelBuilder.Entity("BPCloud_VP_POService.Models.BPCOFAIACT", b =>
                {
                    b.Property<string>("Client")
                        .HasMaxLength(3)
                        .HasColumnType("character varying(3)");

                    b.Property<string>("Company")
                        .HasMaxLength(4)
                        .HasColumnType("character varying(4)");

                    b.Property<string>("Type")
                        .HasMaxLength(1)
                        .HasColumnType("character varying(1)");

                    b.Property<string>("PatnerID")
                        .HasMaxLength(12)
                        .HasColumnType("character varying(12)");

                    b.Property<string>("SeqNo")
                        .HasMaxLength(4)
                        .HasColumnType("character varying(4)");

                    b.Property<string>("ActionText")
                        .HasColumnType("text");

                    b.Property<string>("AppID")
                        .HasColumnType("text");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("DocNumber")
                        .HasColumnType("text");

                    b.Property<bool>("HasSeen")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("text");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Status")
                        .HasColumnType("text");

                    b.Property<string>("Time")
                        .HasColumnType("text");

                    b.HasKey("Client", "Company", "Type", "PatnerID", "SeqNo");

                    b.ToTable("BPC_OF_AI_ACT");
                });

            modelBuilder.Entity("BPCloud_VP_POService.Models.BPCOFGRGI", b =>
                {
                    b.Property<string>("Client")
                        .HasMaxLength(3)
                        .HasColumnType("character varying(3)");

                    b.Property<string>("Company")
                        .HasMaxLength(4)
                        .HasColumnType("character varying(4)");

                    b.Property<string>("Type")
                        .HasMaxLength(1)
                        .HasColumnType("character varying(1)");

                    b.Property<string>("PatnerID")
                        .HasMaxLength(12)
                        .HasColumnType("character varying(12)");

                    b.Property<string>("DocNumber")
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)");

                    b.Property<string>("GRGIDoc")
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)");

                    b.Property<string>("Item")
                        .HasMaxLength(4)
                        .HasColumnType("character varying(4)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("DeliveryDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<double?>("GRGIQty")
                        .HasColumnType("double precision");

                    b.Property<DateTime?>("GRIDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsFinal")
                        .HasColumnType("boolean");

                    b.Property<string>("Material")
                        .HasColumnType("text");

                    b.Property<string>("MaterialText")
                        .HasColumnType("text");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("text");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Plant")
                        .HasColumnType("text");

                    b.Property<string>("ShippingDoc")
                        .HasColumnType("text");

                    b.Property<string>("ShippingPartner")
                        .HasColumnType("text");

                    b.HasKey("Client", "Company", "Type", "PatnerID", "DocNumber", "GRGIDoc", "Item");

                    b.ToTable("BPC_OF_GRGI");
                });

            modelBuilder.Entity("BPCloud_VP_POService.Models.BPCOFHeader", b =>
                {
                    b.Property<string>("Client")
                        .HasMaxLength(3)
                        .HasColumnType("character varying(3)");

                    b.Property<string>("Company")
                        .HasMaxLength(4)
                        .HasColumnType("character varying(4)");

                    b.Property<string>("Type")
                        .HasMaxLength(1)
                        .HasColumnType("character varying(1)");

                    b.Property<string>("PatnerID")
                        .HasMaxLength(12)
                        .HasColumnType("character varying(12)");

                    b.Property<string>("DocNumber")
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)");

                    b.Property<DateTime?>("AckDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("AckRemark")
                        .HasColumnType("text");

                    b.Property<string>("AckStatus")
                        .HasColumnType("text");

                    b.Property<string>("AckUser")
                        .HasColumnType("text");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<double?>("CrossAmount")
                        .HasColumnType("double precision");

                    b.Property<string>("Currency")
                        .HasColumnType("text");

                    b.Property<DateTime?>("DocDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("DocType")
                        .HasColumnType("text");

                    b.Property<string>("DocVersion")
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("text");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<double?>("NetAmount")
                        .HasColumnType("double precision");

                    b.Property<string>("PINNumber")
                        .HasColumnType("text");

                    b.Property<string>("POCreator")
                        .HasColumnType("text");

                    b.Property<string>("Plant")
                        .HasColumnType("text");

                    b.Property<string>("PlantName")
                        .HasColumnType("text");

                    b.Property<string>("RefDoc")
                        .HasColumnType("text");

                    b.Property<string>("ReleasedStatus")
                        .HasColumnType("text");

                    b.Property<string>("Status")
                        .HasColumnType("text");

                    b.HasKey("Client", "Company", "Type", "PatnerID", "DocNumber");

                    b.ToTable("BPC_OF_H");
                });

            modelBuilder.Entity("BPCloud_VP_POService.Models.BPCOFItem", b =>
                {
                    b.Property<string>("Client")
                        .HasMaxLength(3)
                        .HasColumnType("character varying(3)");

                    b.Property<string>("Company")
                        .HasMaxLength(4)
                        .HasColumnType("character varying(4)");

                    b.Property<string>("Type")
                        .HasMaxLength(1)
                        .HasColumnType("character varying(1)");

                    b.Property<string>("PatnerID")
                        .HasMaxLength(12)
                        .HasColumnType("character varying(12)");

                    b.Property<string>("DocNumber")
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)");

                    b.Property<string>("Item")
                        .HasMaxLength(4)
                        .HasColumnType("character varying(4)");

                    b.Property<DateTime?>("AckDeliveryDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("AckStatus")
                        .HasColumnType("text");

                    b.Property<double?>("CompletedQty")
                        .HasColumnType("double precision");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("DeliveryDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Flag")
                        .HasMaxLength(12)
                        .HasColumnType("character varying(12)");

                    b.Property<double?>("FreightAmount")
                        .HasColumnType("double precision");

                    b.Property<string>("HSN")
                        .HasColumnType("text");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsClosed")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsFreightAvailable")
                        .HasColumnType("boolean");

                    b.Property<string>("Material")
                        .HasColumnType("text");

                    b.Property<string>("MaterialText")
                        .HasColumnType("text");

                    b.Property<string>("MaterialType")
                        .HasColumnType("text");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("text");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<double?>("OpenQty")
                        .HasColumnType("double precision");

                    b.Property<double?>("OrderedQty")
                        .HasColumnType("double precision");

                    b.Property<string>("PlantCode")
                        .HasColumnType("text");

                    b.Property<double?>("TaxAmount")
                        .HasColumnType("double precision");

                    b.Property<string>("TaxCode")
                        .HasColumnType("text");

                    b.Property<double?>("ToleranceLowerLimit")
                        .HasColumnType("double precision");

                    b.Property<double?>("ToleranceUpperLimit")
                        .HasColumnType("double precision");

                    b.Property<double?>("TransitQty")
                        .HasColumnType("double precision");

                    b.Property<string>("UOM")
                        .HasColumnType("text");

                    b.Property<double?>("UnitPrice")
                        .HasColumnType("double precision");

                    b.Property<double?>("Value")
                        .HasColumnType("double precision");

                    b.HasKey("Client", "Company", "Type", "PatnerID", "DocNumber", "Item");

                    b.ToTable("BPC_OF_I");
                });

            modelBuilder.Entity("BPCloud_VP_POService.Models.BPCOFItemSES", b =>
                {
                    b.Property<string>("Client")
                        .HasMaxLength(3)
                        .HasColumnType("character varying(3)");

                    b.Property<string>("Company")
                        .HasMaxLength(4)
                        .HasColumnType("character varying(4)");

                    b.Property<string>("Type")
                        .HasMaxLength(1)
                        .HasColumnType("character varying(1)");

                    b.Property<string>("PatnerID")
                        .HasMaxLength(12)
                        .HasColumnType("character varying(12)");

                    b.Property<string>("DocNumber")
                        .HasMaxLength(12)
                        .HasColumnType("character varying(12)");

                    b.Property<string>("Item")
                        .HasMaxLength(4)
                        .HasColumnType("character varying(4)");

                    b.Property<string>("ServiceNo")
                        .HasMaxLength(24)
                        .HasColumnType("character varying(24)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("text");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<double>("OpenQty")
                        .HasColumnType("double precision");

                    b.Property<double>("OrderedQty")
                        .HasColumnType("double precision");

                    b.Property<string>("ServiceItem")
                        .HasColumnType("text");

                    b.Property<double>("ServiceQty")
                        .HasColumnType("double precision");

                    b.HasKey("Client", "Company", "Type", "PatnerID", "DocNumber", "Item", "ServiceNo");

                    b.ToTable("BPC_OF_I_SES");
                });

            modelBuilder.Entity("BPCloud_VP_POService.Models.BPCOFQM", b =>
                {
                    b.Property<string>("Client")
                        .HasMaxLength(3)
                        .HasColumnType("character varying(3)");

                    b.Property<string>("Company")
                        .HasMaxLength(4)
                        .HasColumnType("character varying(4)");

                    b.Property<string>("Type")
                        .HasMaxLength(1)
                        .HasColumnType("character varying(1)");

                    b.Property<string>("PatnerID")
                        .HasMaxLength(12)
                        .HasColumnType("character varying(12)");

                    b.Property<string>("DocNumber")
                        .HasMaxLength(12)
                        .HasColumnType("character varying(12)");

                    b.Property<string>("Item")
                        .HasMaxLength(12)
                        .HasColumnType("character varying(12)");

                    b.Property<int>("SerialNumber")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("SerialNumber"));

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<double?>("GRGIQty")
                        .HasColumnType("double precision");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<double?>("LotQty")
                        .HasColumnType("double precision");

                    b.Property<string>("Material")
                        .HasColumnType("text");

                    b.Property<string>("MaterialText")
                        .HasColumnType("text");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("text");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<double?>("RejQty")
                        .HasColumnType("double precision");

                    b.Property<string>("RejReason")
                        .HasColumnType("text");

                    b.HasKey("Client", "Company", "Type", "PatnerID", "DocNumber", "Item", "SerialNumber");

                    b.ToTable("BPC_OF_QM");
                });

            modelBuilder.Entity("BPCloud_VP_POService.Models.BPCOFScheduleLine", b =>
                {
                    b.Property<string>("Client")
                        .HasMaxLength(3)
                        .HasColumnType("character varying(3)");

                    b.Property<string>("Company")
                        .HasMaxLength(4)
                        .HasColumnType("character varying(4)");

                    b.Property<string>("Type")
                        .HasMaxLength(1)
                        .HasColumnType("character varying(1)");

                    b.Property<string>("PatnerID")
                        .HasMaxLength(12)
                        .HasColumnType("character varying(12)");

                    b.Property<string>("DocNumber")
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)");

                    b.Property<string>("Item")
                        .HasMaxLength(4)
                        .HasColumnType("character varying(4)");

                    b.Property<string>("SlLine")
                        .HasMaxLength(4)
                        .HasColumnType("character varying(4)");

                    b.Property<DateTime?>("AckDeliveryDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("AckStatus")
                        .HasColumnType("text");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("DeliveryDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("text");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<double?>("OpenQty")
                        .HasColumnType("double precision");

                    b.Property<double?>("OrderedQty")
                        .HasColumnType("double precision");

                    b.HasKey("Client", "Company", "Type", "PatnerID", "DocNumber", "Item", "SlLine");

                    b.ToTable("BPC_OF_SL");
                });

            modelBuilder.Entity("BPCloud_VP_POService.Models.BPCOFSubcon", b =>
                {
                    b.Property<string>("Client")
                        .HasMaxLength(3)
                        .HasColumnType("character varying(3)");

                    b.Property<string>("Company")
                        .HasMaxLength(4)
                        .HasColumnType("character varying(4)");

                    b.Property<string>("Type")
                        .HasMaxLength(1)
                        .HasColumnType("character varying(1)");

                    b.Property<string>("PatnerID")
                        .HasMaxLength(12)
                        .HasColumnType("character varying(12)");

                    b.Property<string>("DocNumber")
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)");

                    b.Property<string>("Item")
                        .HasMaxLength(4)
                        .HasColumnType("character varying(4)");

                    b.Property<string>("SlLine")
                        .HasMaxLength(4)
                        .HasColumnType("character varying(4)");

                    b.Property<string>("Batch")
                        .HasColumnType("text");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("text");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<double>("OrderedQty")
                        .HasColumnType("double precision");

                    b.Property<string>("Remarks")
                        .HasColumnType("text");

                    b.Property<string>("Status")
                        .HasColumnType("text");

                    b.HasKey("Client", "Company", "Type", "PatnerID", "DocNumber", "Item", "SlLine");

                    b.ToTable("BPC_OF_Subcon");
                });

            modelBuilder.Entity("BPCloud_VP_POService.Models.BPCPIHeader", b =>
                {
                    b.Property<string>("Client")
                        .HasMaxLength(3)
                        .HasColumnType("character varying(3)");

                    b.Property<string>("Company")
                        .HasMaxLength(4)
                        .HasColumnType("character varying(4)");

                    b.Property<string>("Type")
                        .HasMaxLength(1)
                        .HasColumnType("character varying(1)");

                    b.Property<string>("PatnerID")
                        .HasMaxLength(12)
                        .HasColumnType("character varying(12)");

                    b.Property<string>("PIRNumber")
                        .HasMaxLength(12)
                        .HasColumnType("character varying(12)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Currency")
                        .HasColumnType("text");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("DeliveryNote")
                        .HasColumnType("text");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("DocumentNumber")
                        .HasColumnType("text");

                    b.Property<double?>("GrossAmount")
                        .HasColumnType("double precision");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<string>("Material")
                        .HasColumnType("text");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("text");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<double?>("NetAmount")
                        .HasColumnType("double precision");

                    b.Property<string>("PIRType")
                        .HasColumnType("text");

                    b.Property<double>("Qty")
                        .HasColumnType("double precision");

                    b.Property<string>("Reason")
                        .HasColumnType("text");

                    b.Property<string>("ReferenceDoc")
                        .HasColumnType("text");

                    b.Property<string>("Status")
                        .HasColumnType("text");

                    b.Property<string>("Text")
                        .HasColumnType("text");

                    b.Property<string>("UOM")
                        .HasColumnType("text");

                    b.HasKey("Client", "Company", "Type", "PatnerID", "PIRNumber");

                    b.ToTable("BPC_PI_H");
                });

            modelBuilder.Entity("BPCloud_VP_POService.Models.BPCPIItem", b =>
                {
                    b.Property<string>("Client")
                        .HasMaxLength(3)
                        .HasColumnType("character varying(3)");

                    b.Property<string>("Company")
                        .HasMaxLength(4)
                        .HasColumnType("character varying(4)");

                    b.Property<string>("Type")
                        .HasMaxLength(1)
                        .HasColumnType("character varying(1)");

                    b.Property<string>("PatnerID")
                        .HasMaxLength(12)
                        .HasColumnType("character varying(12)");

                    b.Property<string>("PIRNumber")
                        .HasMaxLength(12)
                        .HasColumnType("character varying(12)");

                    b.Property<string>("Item")
                        .HasMaxLength(4)
                        .HasColumnType("character varying(4)");

                    b.Property<string>("AttachmentReferenceNo")
                        .HasColumnType("text");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("DeliveryDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("FileName")
                        .HasColumnType("text");

                    b.Property<string>("HSN")
                        .HasColumnType("text");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<string>("Material")
                        .HasColumnType("text");

                    b.Property<string>("MaterialText")
                        .HasColumnType("text");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("text");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<double?>("OrderQty")
                        .HasColumnType("double precision");

                    b.Property<string>("ProdcutID")
                        .HasColumnType("text");

                    b.Property<string>("ReasonText")
                        .HasColumnType("text");

                    b.Property<double?>("RetQty")
                        .HasColumnType("double precision");

                    b.Property<string>("UOM")
                        .HasColumnType("text");

                    b.HasKey("Client", "Company", "Type", "PatnerID", "PIRNumber", "Item");

                    b.ToTable("BPC_PI_I");
                });

            modelBuilder.Entity("BPCloud_VP_POService.Models.BPCPODHeader", b =>
                {
                    b.Property<string>("Client")
                        .HasMaxLength(3)
                        .HasColumnType("character varying(3)");

                    b.Property<string>("Company")
                        .HasMaxLength(4)
                        .HasColumnType("character varying(4)");

                    b.Property<string>("Type")
                        .HasMaxLength(1)
                        .HasColumnType("character varying(1)");

                    b.Property<string>("PatnerID")
                        .HasMaxLength(12)
                        .HasColumnType("character varying(12)");

                    b.Property<string>("InvoiceNumber")
                        .HasColumnType("text");

                    b.Property<double?>("Amount")
                        .HasColumnType("double precision");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Currency")
                        .HasColumnType("text");

                    b.Property<string>("DocNumber")
                        .HasColumnType("text");

                    b.Property<string>("Driver")
                        .HasColumnType("text");

                    b.Property<string>("DriverContactNo")
                        .HasColumnType("text");

                    b.Property<DateTime?>("InvoiceDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("text");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Plant")
                        .HasColumnType("text");

                    b.Property<string>("Status")
                        .HasColumnType("text");

                    b.Property<string>("Transporter")
                        .HasColumnType("text");

                    b.Property<string>("TruckNumber")
                        .HasColumnType("text");

                    b.Property<string>("VessleNumber")
                        .HasColumnType("text");

                    b.HasKey("Client", "Company", "Type", "PatnerID", "InvoiceNumber");

                    b.ToTable("BPC_POD_H");
                });

            modelBuilder.Entity("BPCloud_VP_POService.Models.BPCPODItem", b =>
                {
                    b.Property<string>("Client")
                        .HasMaxLength(3)
                        .HasColumnType("character varying(3)");

                    b.Property<string>("Company")
                        .HasMaxLength(4)
                        .HasColumnType("character varying(4)");

                    b.Property<string>("Type")
                        .HasMaxLength(1)
                        .HasColumnType("character varying(1)");

                    b.Property<string>("PatnerID")
                        .HasMaxLength(12)
                        .HasColumnType("character varying(12)");

                    b.Property<string>("InvoiceNumber")
                        .HasColumnType("text");

                    b.Property<string>("Item")
                        .HasColumnType("text");

                    b.Property<double?>("AcceptedQty")
                        .HasColumnType("double precision");

                    b.Property<string>("AttachmentName")
                        .HasColumnType("text");

                    b.Property<string>("AttachmentReferenceNo")
                        .HasColumnType("text");

                    b.Property<double?>("BreakageQty")
                        .HasColumnType("double precision");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("DocNumber")
                        .HasColumnType("text");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<string>("Material")
                        .HasColumnType("text");

                    b.Property<string>("MaterialText")
                        .HasColumnType("text");

                    b.Property<double?>("MissingQty")
                        .HasColumnType("double precision");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("text");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<double>("Qty")
                        .HasColumnType("double precision");

                    b.Property<string>("Reason")
                        .HasColumnType("text");

                    b.Property<double?>("ReceivedQty")
                        .HasColumnType("double precision");

                    b.Property<string>("Remarks")
                        .HasColumnType("text");

                    b.HasKey("Client", "Company", "Type", "PatnerID", "InvoiceNumber", "Item");

                    b.ToTable("BPC_POD_I");
                });

            modelBuilder.Entity("BPCloud_VP_POService.Models.BPCPayAccountStatement", b =>
                {
                    b.Property<string>("Client")
                        .HasMaxLength(3)
                        .HasColumnType("character varying(3)");

                    b.Property<string>("Company")
                        .HasMaxLength(4)
                        .HasColumnType("character varying(4)");

                    b.Property<string>("Type")
                        .HasMaxLength(1)
                        .HasColumnType("character varying(1)");

                    b.Property<string>("PartnerID")
                        .HasMaxLength(12)
                        .HasColumnType("character varying(12)");

                    b.Property<string>("FiscalYear")
                        .HasMaxLength(4)
                        .HasColumnType("character varying(4)");

                    b.Property<string>("DocumentNumber")
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)");

                    b.Property<string>("AcceptedBy")
                        .HasColumnType("text");

                    b.Property<DateTime?>("AcceptedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<double?>("AdvanceAmount")
                        .HasColumnType("double precision");

                    b.Property<double>("BalanceAmount")
                        .HasColumnType("double precision");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("DocumentDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("DueDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<double>("InvoiceAmount")
                        .HasColumnType("double precision");

                    b.Property<DateTime?>("InvoiceDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("InvoiceNumber")
                        .HasColumnType("text");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("text");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<double>("PaidAmount")
                        .HasColumnType("double precision");

                    b.Property<string>("Plant")
                        .HasColumnType("text");

                    b.Property<string>("ProfitCenter")
                        .HasColumnType("text");

                    b.Property<string>("Reference")
                        .HasColumnType("text");

                    b.Property<string>("Status")
                        .HasColumnType("text");

                    b.Property<double?>("TDS")
                        .HasColumnType("double precision");

                    b.HasKey("Client", "Company", "Type", "PartnerID", "FiscalYear", "DocumentNumber");

                    b.ToTable("BPC_PAY_AS");
                });

            modelBuilder.Entity("BPCloud_VP_POService.Models.BPCPayDiscount", b =>
                {
                    b.Property<string>("Client")
                        .HasMaxLength(3)
                        .HasColumnType("character varying(3)");

                    b.Property<string>("Company")
                        .HasMaxLength(4)
                        .HasColumnType("character varying(4)");

                    b.Property<string>("Type")
                        .HasMaxLength(1)
                        .HasColumnType("character varying(1)");

                    b.Property<string>("PartnerID")
                        .HasMaxLength(12)
                        .HasColumnType("character varying(12)");

                    b.Property<string>("FiscalYear")
                        .HasMaxLength(4)
                        .HasColumnType("character varying(4)");

                    b.Property<string>("DocumentNumber")
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)");

                    b.Property<string>("ApprovedBy")
                        .HasColumnType("text");

                    b.Property<DateTime?>("ApprovedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<double>("BalanceAmount")
                        .HasColumnType("double precision");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("DocumentDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("DueDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<double>("InvoiceAmount")
                        .HasColumnType("double precision");

                    b.Property<DateTime?>("InvoiceDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("InvoiceNumber")
                        .HasColumnType("text");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("text");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<double>("PaidAmount")
                        .HasColumnType("double precision");

                    b.Property<double>("PostDiscountAmount")
                        .HasColumnType("double precision");

                    b.Property<string>("ProfitCenter")
                        .HasColumnType("text");

                    b.Property<double>("ProposedDiscount")
                        .HasColumnType("double precision");

                    b.Property<DateTime?>("ProposedDueDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Status")
                        .HasColumnType("text");

                    b.HasKey("Client", "Company", "Type", "PartnerID", "FiscalYear", "DocumentNumber");

                    b.HasIndex("ProfitCenter");

                    b.ToTable("BPC_PAY_DIS");
                });

            modelBuilder.Entity("BPCloud_VP_POService.Models.BPCPayDiscountMaster", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ID"));

                    b.Property<double>("Amount")
                        .HasColumnType("double precision");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("Days")
                        .HasColumnType("integer");

                    b.Property<double>("Discount")
                        .HasColumnType("double precision");

                    b.Property<string>("FiscalYear")
                        .HasMaxLength(4)
                        .HasColumnType("character varying(4)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("text");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("ProfitCenter")
                        .HasMaxLength(450)
                        .HasColumnType("character varying(450)");

                    b.HasKey("ID");

                    b.HasIndex("FiscalYear", "ProfitCenter");

                    b.ToTable("BPC_PAY_DIS_MASTER");
                });

            modelBuilder.Entity("BPCloud_VP_POService.Models.BPCPayPayable", b =>
                {
                    b.Property<string>("Client")
                        .HasMaxLength(3)
                        .HasColumnType("character varying(3)");

                    b.Property<string>("Company")
                        .HasMaxLength(4)
                        .HasColumnType("character varying(4)");

                    b.Property<string>("Type")
                        .HasMaxLength(1)
                        .HasColumnType("character varying(1)");

                    b.Property<string>("PartnerID")
                        .HasMaxLength(12)
                        .HasColumnType("character varying(12)");

                    b.Property<string>("FiscalYear")
                        .HasMaxLength(4)
                        .HasColumnType("character varying(4)");

                    b.Property<string>("Invoice")
                        .HasMaxLength(16)
                        .HasColumnType("character varying(16)");

                    b.Property<double>("AdvAmount")
                        .HasColumnType("double precision");

                    b.Property<double>("Amount")
                        .HasColumnType("double precision");

                    b.Property<double>("Balance")
                        .HasColumnType("double precision");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Currency")
                        .HasColumnType("text");

                    b.Property<DateTime?>("DueDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("InvoiceDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("text");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("PostedOn")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Client", "Company", "Type", "PartnerID", "FiscalYear", "Invoice");

                    b.ToTable("BPC_PAY_PAYABLE");
                });

            modelBuilder.Entity("BPCloud_VP_POService.Models.BPCPayPayment", b =>
                {
                    b.Property<string>("Client")
                        .HasMaxLength(3)
                        .HasColumnType("character varying(3)");

                    b.Property<string>("Company")
                        .HasMaxLength(4)
                        .HasColumnType("character varying(4)");

                    b.Property<string>("Type")
                        .HasMaxLength(1)
                        .HasColumnType("character varying(1)");

                    b.Property<string>("PartnerID")
                        .HasMaxLength(12)
                        .HasColumnType("character varying(12)");

                    b.Property<string>("FiscalYear")
                        .HasMaxLength(4)
                        .HasColumnType("character varying(4)");

                    b.Property<string>("DocumentNumber")
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)");

                    b.Property<string>("BankAccount")
                        .HasColumnType("text");

                    b.Property<string>("BankName")
                        .HasColumnType("text");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("text");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<double>("PaidAmount")
                        .HasColumnType("double precision");

                    b.Property<DateTime?>("PaymentDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("PaymentType")
                        .HasColumnType("text");

                    b.HasKey("Client", "Company", "Type", "PartnerID", "FiscalYear", "DocumentNumber");

                    b.ToTable("BPC_PAY_PAYMENT");
                });

            modelBuilder.Entity("BPCloud_VP_POService.Models.BPCPayRecord", b =>
                {
                    b.Property<string>("Client")
                        .HasMaxLength(3)
                        .HasColumnType("character varying(3)");

                    b.Property<string>("Company")
                        .HasMaxLength(4)
                        .HasColumnType("character varying(4)");

                    b.Property<string>("Type")
                        .HasMaxLength(1)
                        .HasColumnType("character varying(1)");

                    b.Property<string>("PartnerID")
                        .HasMaxLength(12)
                        .HasColumnType("character varying(12)");

                    b.Property<string>("DocumentNumber")
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)");

                    b.Property<string>("InvoiceNumber")
                        .HasMaxLength(450)
                        .HasColumnType("character varying(450)");

                    b.Property<string>("PayRecordNo")
                        .HasMaxLength(450)
                        .HasColumnType("character varying(450)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<string>("Medium")
                        .HasColumnType("text");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("text");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<double>("PaidAmount")
                        .HasColumnType("double precision");

                    b.Property<string>("PayDoc")
                        .HasColumnType("text");

                    b.Property<DateTime?>("PaymentDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("RefNumber")
                        .HasColumnType("text");

                    b.Property<string>("Remarks")
                        .HasColumnType("text");

                    b.Property<string>("Time")
                        .HasColumnType("text");

                    b.Property<string>("UOM")
                        .HasColumnType("text");

                    b.HasKey("Client", "Company", "Type", "PartnerID", "DocumentNumber", "InvoiceNumber", "PayRecordNo");

                    b.ToTable("BPC_PAY_RECORD");
                });

            modelBuilder.Entity("BPCloud_VP_POService.Models.BPCPayTDS", b =>
                {
                    b.Property<string>("Client")
                        .HasMaxLength(3)
                        .HasColumnType("character varying(3)");

                    b.Property<string>("Company")
                        .HasMaxLength(4)
                        .HasColumnType("character varying(4)");

                    b.Property<string>("Type")
                        .HasMaxLength(1)
                        .HasColumnType("character varying(1)");

                    b.Property<string>("PartnerID")
                        .HasMaxLength(12)
                        .HasColumnType("character varying(12)");

                    b.Property<string>("FiscalYear")
                        .HasMaxLength(4)
                        .HasColumnType("character varying(4)");

                    b.Property<string>("CompanyCode")
                        .HasColumnType("text");

                    b.Property<string>("DocumentID")
                        .HasColumnType("text");

                    b.Property<double>("BaseAmount")
                        .HasColumnType("double precision");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Currency")
                        .HasColumnType("text");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("text");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("PostingDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<double>("TDSAmount")
                        .HasColumnType("double precision");

                    b.Property<string>("TDSCategory")
                        .HasColumnType("text");

                    b.HasKey("Client", "Company", "Type", "PartnerID", "FiscalYear", "CompanyCode", "DocumentID");

                    b.ToTable("BPC_PAY_TDS");
                });

            modelBuilder.Entity("BPCloud_VP_POService.Models.BPCPlantMaster", b =>
                {
                    b.Property<string>("PlantCode")
                        .HasColumnType("text")
                        .HasColumnOrder(1);

                    b.Property<string>("AddressLine1")
                        .HasColumnType("text");

                    b.Property<string>("AddressLine2")
                        .HasColumnType("text");

                    b.Property<string>("City")
                        .HasColumnType("text");

                    b.Property<string>("Country")
                        .HasColumnType("text");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("text");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("PinCode")
                        .HasColumnType("text");

                    b.Property<string>("PlantText")
                        .HasColumnType("text");

                    b.Property<string>("State")
                        .HasColumnType("text");

                    b.HasKey("PlantCode");

                    b.ToTable("BPC_Plant_Master");
                });

            modelBuilder.Entity("BPCloud_VP_POService.Models.BPCProd", b =>
                {
                    b.Property<string>("Client")
                        .HasMaxLength(3)
                        .HasColumnType("character varying(3)");

                    b.Property<string>("Company")
                        .HasMaxLength(4)
                        .HasColumnType("character varying(4)");

                    b.Property<string>("Type")
                        .HasMaxLength(1)
                        .HasColumnType("character varying(1)");

                    b.Property<string>("ProductID")
                        .HasMaxLength(18)
                        .HasColumnType("character varying(18)");

                    b.Property<string>("AttID")
                        .HasColumnType("text");

                    b.Property<string>("BasePrice")
                        .HasColumnType("text");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<string>("MaterialGroup")
                        .HasColumnType("text");

                    b.Property<string>("MaterialText")
                        .HasColumnType("text");

                    b.Property<string>("MaterialType")
                        .HasColumnType("text");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("text");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Stock")
                        .HasColumnType("text");

                    b.Property<DateTime?>("StockUpdatedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("UOM")
                        .HasColumnType("text");

                    b.HasKey("Client", "Company", "Type", "ProductID");

                    b.ToTable("BPC_Prod");
                });

            modelBuilder.Entity("BPCloud_VP_POService.Models.BPCProdFav", b =>
                {
                    b.Property<string>("Client")
                        .HasMaxLength(3)
                        .HasColumnType("character varying(3)");

                    b.Property<string>("Company")
                        .HasMaxLength(4)
                        .HasColumnType("character varying(4)");

                    b.Property<string>("Type")
                        .HasMaxLength(1)
                        .HasColumnType("character varying(1)");

                    b.Property<string>("PatnerID")
                        .HasMaxLength(12)
                        .HasColumnType("character varying(12)");

                    b.Property<string>("ProductID")
                        .HasMaxLength(18)
                        .HasColumnType("character varying(18)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("text");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("Rating")
                        .HasColumnType("integer");

                    b.HasKey("Client", "Company", "Type", "PatnerID", "ProductID");

                    b.ToTable("BPC_Prod_Fav");
                });

            modelBuilder.Entity("BPCloud_VP_POService.Models.BPCProfitCentreMaster", b =>
                {
                    b.Property<string>("ProfitCentre")
                        .HasColumnType("text")
                        .HasColumnOrder(1);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<string>("Language")
                        .HasColumnType("text");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("text");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("ProfitCentre");

                    b.ToTable("BPC_ProfitCentre_Master");
                });

            modelBuilder.Entity("BPCloud_VP_POService.Models.BPCReasonMaster", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnOrder(1);

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ID"));

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("text");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("ReasonCode")
                        .HasColumnType("text");

                    b.Property<string>("ReasonText")
                        .HasColumnType("text");

                    b.HasKey("ID");

                    b.ToTable("BPC_Reason_Master");
                });

            modelBuilder.Entity("BPCloud_VP_POService.Models.BPCRetHeader", b =>
                {
                    b.Property<string>("Client")
                        .HasMaxLength(3)
                        .HasColumnType("character varying(3)");

                    b.Property<string>("Company")
                        .HasMaxLength(4)
                        .HasColumnType("character varying(4)");

                    b.Property<string>("Type")
                        .HasMaxLength(1)
                        .HasColumnType("character varying(1)");

                    b.Property<string>("PatnerID")
                        .HasMaxLength(12)
                        .HasColumnType("character varying(12)");

                    b.Property<string>("RetReqID")
                        .HasMaxLength(12)
                        .HasColumnType("character varying(12)");

                    b.Property<string>("AWBNumber")
                        .HasColumnType("text");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("CreditNote")
                        .HasColumnType("text");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("DocumentNumber")
                        .HasColumnType("text");

                    b.Property<string>("InvoiceDoc")
                        .HasColumnType("text");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("text");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Status")
                        .HasColumnType("text");

                    b.Property<string>("Text")
                        .HasColumnType("text");

                    b.Property<string>("Transporter")
                        .HasColumnType("text");

                    b.Property<string>("TruckNumber")
                        .HasColumnType("text");

                    b.HasKey("Client", "Company", "Type", "PatnerID", "RetReqID");

                    b.ToTable("BPC_Ret_H");
                });

            modelBuilder.Entity("BPCloud_VP_POService.Models.BPCRetItem", b =>
                {
                    b.Property<string>("Client")
                        .HasMaxLength(3)
                        .HasColumnType("character varying(3)");

                    b.Property<string>("Company")
                        .HasMaxLength(4)
                        .HasColumnType("character varying(4)");

                    b.Property<string>("Type")
                        .HasMaxLength(1)
                        .HasColumnType("character varying(1)");

                    b.Property<string>("PatnerID")
                        .HasMaxLength(12)
                        .HasColumnType("character varying(12)");

                    b.Property<string>("RetReqID")
                        .HasMaxLength(12)
                        .HasColumnType("character varying(12)");

                    b.Property<string>("Item")
                        .HasMaxLength(4)
                        .HasColumnType("character varying(4)");

                    b.Property<string>("AttachmentReferenceNo")
                        .HasColumnType("text");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("FileName")
                        .HasColumnType("text");

                    b.Property<string>("InvoiceNumber")
                        .HasColumnType("text");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<string>("Material")
                        .HasColumnType("text");

                    b.Property<string>("MaterialText")
                        .HasColumnType("text");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("text");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<double>("OrderQty")
                        .HasColumnType("double precision");

                    b.Property<string>("ProdcutID")
                        .HasColumnType("text");

                    b.Property<string>("ReasonText")
                        .HasColumnType("text");

                    b.Property<double>("RetQty")
                        .HasColumnType("double precision");

                    b.HasKey("Client", "Company", "Type", "PatnerID", "RetReqID", "Item");

                    b.ToTable("BPC_Ret_I");
                });

            modelBuilder.Entity("BPCloud_VP_POService.Models.BPCRetItemBatch", b =>
                {
                    b.Property<string>("Client")
                        .HasMaxLength(3)
                        .HasColumnType("character varying(3)");

                    b.Property<string>("Company")
                        .HasMaxLength(4)
                        .HasColumnType("character varying(4)");

                    b.Property<string>("Type")
                        .HasMaxLength(1)
                        .HasColumnType("character varying(1)");

                    b.Property<string>("PatnerID")
                        .HasMaxLength(12)
                        .HasColumnType("character varying(12)");

                    b.Property<string>("RetReqID")
                        .HasMaxLength(12)
                        .HasColumnType("character varying(12)");

                    b.Property<string>("Item")
                        .HasMaxLength(4)
                        .HasColumnType("character varying(4)");

                    b.Property<string>("Batch")
                        .HasMaxLength(24)
                        .HasColumnType("character varying(24)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("text");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<double>("RetQty")
                        .HasColumnType("double precision");

                    b.HasKey("Client", "Company", "Type", "PatnerID", "RetReqID", "Item", "Batch");

                    b.ToTable("BPC_Ret_I_Batch");
                });

            modelBuilder.Entity("BPCloud_VP_POService.Models.BPCRetItemSerial", b =>
                {
                    b.Property<string>("Client")
                        .HasMaxLength(3)
                        .HasColumnType("character varying(3)");

                    b.Property<string>("Company")
                        .HasMaxLength(4)
                        .HasColumnType("character varying(4)");

                    b.Property<string>("Type")
                        .HasMaxLength(1)
                        .HasColumnType("character varying(1)");

                    b.Property<string>("PatnerID")
                        .HasMaxLength(12)
                        .HasColumnType("character varying(12)");

                    b.Property<string>("RetReqID")
                        .HasMaxLength(12)
                        .HasColumnType("character varying(12)");

                    b.Property<string>("Item")
                        .HasMaxLength(4)
                        .HasColumnType("character varying(4)");

                    b.Property<string>("Serial")
                        .HasMaxLength(24)
                        .HasColumnType("character varying(24)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("text");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<double>("RetQty")
                        .HasColumnType("double precision");

                    b.HasKey("Client", "Company", "Type", "PatnerID", "RetReqID", "Item", "Serial");

                    b.ToTable("BPC_Ret_I_Serial");
                });

            modelBuilder.Entity("BPCloud_VP_POService.Models.BPCSCOCMessage", b =>
                {
                    b.Property<int>("MessageID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("MessageID"));

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsReleased")
                        .HasColumnType("boolean");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("text");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("SCOCMessage")
                        .HasColumnType("text");

                    b.HasKey("MessageID");

                    b.ToTable("BPC_SCOC_Message");
                });

            modelBuilder.Entity("BPCloud_VP_POService.Models.BPCTaxTypeMaster", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnOrder(1);

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ID"));

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("text");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("TaxType")
                        .HasColumnType("text");

                    b.HasKey("ID");

                    b.ToTable("BPC_TaxType_Master");
                });

            modelBuilder.Entity("BPCloud_VP_POService.Models.BPCWelcomeMessage", b =>
                {
                    b.Property<int>("MessageID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("MessageID"));

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsReleased")
                        .HasColumnType("boolean");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("text");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("WelcomeMessage")
                        .HasColumnType("text");

                    b.HasKey("MessageID");

                    b.ToTable("BPC_Welcome_Message");
                });

            modelBuilder.Entity("BPCloud_VP_POService.Models.BPC_GSTIN", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ID"));

                    b.Property<string>("GSTIN")
                        .HasColumnType("text");

                    b.Property<string>("Plant")
                        .HasColumnType("text");

                    b.Property<string>("State")
                        .HasColumnType("text");

                    b.HasKey("ID");

                    b.ToTable("BPC_GSTIN");
                });

            modelBuilder.Entity("BPCloud_VP_POService.Models.BPTicketStatus", b =>
                {
                    b.Property<string>("ID")
                        .HasColumnType("text");

                    b.Property<string>("Ticket_status")
                        .HasColumnType("text");

                    b.HasKey("ID");

                    b.ToTable("BP_Ticket_Status");
                });

            modelBuilder.Entity("BPCloud_VP_POService.Models.BalanceConfirmationHeader", b =>
                {
                    b.Property<string>("Client")
                        .HasMaxLength(3)
                        .HasColumnType("character varying(3)");

                    b.Property<string>("Company")
                        .HasMaxLength(4)
                        .HasColumnType("character varying(4)");

                    b.Property<string>("Type")
                        .HasMaxLength(1)
                        .HasColumnType("character varying(1)");

                    b.Property<string>("PatnerID")
                        .HasMaxLength(12)
                        .HasColumnType("character varying(12)");

                    b.Property<string>("FiscalYear")
                        .HasMaxLength(4)
                        .HasColumnType("character varying(4)");

                    b.Property<string>("AcceptedBy")
                        .HasColumnType("text");

                    b.Property<DateTime?>("AcceptedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("BalDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<double>("BillAmount")
                        .HasColumnType("double precision");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Currency")
                        .HasColumnType("text");

                    b.Property<double>("DownPayment")
                        .HasColumnType("double precision");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("text");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<double>("NetDueAmount")
                        .HasColumnType("double precision");

                    b.Property<double>("PaidAmont")
                        .HasColumnType("double precision");

                    b.Property<string>("Plant")
                        .HasColumnType("text");

                    b.Property<string>("Status")
                        .HasColumnType("text");

                    b.Property<double>("TDSAmount")
                        .HasColumnType("double precision");

                    b.Property<double>("TotalPaidAmount")
                        .HasColumnType("double precision");

                    b.HasKey("Client", "Company", "Type", "PatnerID", "FiscalYear");

                    b.ToTable("BP_BC_H");
                });

            modelBuilder.Entity("BPCloud_VP_POService.Models.BalanceConfirmationItem", b =>
                {
                    b.Property<string>("Client")
                        .HasMaxLength(3)
                        .HasColumnType("character varying(3)");

                    b.Property<string>("Company")
                        .HasMaxLength(4)
                        .HasColumnType("character varying(4)");

                    b.Property<string>("Type")
                        .HasMaxLength(1)
                        .HasColumnType("character varying(1)");

                    b.Property<string>("PatnerID")
                        .HasMaxLength(12)
                        .HasColumnType("character varying(12)");

                    b.Property<string>("FiscalYear")
                        .HasMaxLength(4)
                        .HasColumnType("character varying(4)");

                    b.Property<string>("DocNumber")
                        .HasColumnType("text");

                    b.Property<DateTime?>("BalDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<double>("BillAmount")
                        .HasColumnType("double precision");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Currency")
                        .HasColumnType("text");

                    b.Property<DateTime?>("DocDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<double>("DownPayment")
                        .HasColumnType("double precision");

                    b.Property<double>("InvoiceAmount")
                        .HasColumnType("double precision");

                    b.Property<string>("InvoiceNumber")
                        .HasColumnType("text");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("text");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<double>("NetDueAmount")
                        .HasColumnType("double precision");

                    b.Property<double>("PaidAmont")
                        .HasColumnType("double precision");

                    b.Property<double>("TDSAmount")
                        .HasColumnType("double precision");

                    b.Property<double>("TotalPaidAmount")
                        .HasColumnType("double precision");

                    b.HasKey("Client", "Company", "Type", "PatnerID", "FiscalYear", "DocNumber");

                    b.ToTable("BP_BC_I");
                });
#pragma warning restore 612, 618
        }
    }
}
